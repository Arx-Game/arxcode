# Generated by Django 2.2.16 on 2021-04-05 15:06

from django.db import migrations, models
import django.db.models.deletion
from collections import defaultdict


def convert_names(apps, schema_editor):
    Attribute = apps.get_model("typeclasses", "Attribute")
    DisplayNames = apps.get_model("object_extensions", "DisplayNames")
    qs = Attribute.objects.filter(db_key="colored_name")
    names_dict = defaultdict(DisplayNames)
    for attr in qs:
        try:
            objdb = attr.objectdb_set.all()[0]
            if not attr.db_value or not isinstance(attr.db_value, str):
                continue
            # if colored name is the same as the regular key, skip it
            if attr.db_value == objdb.db_key:
                continue
            # using a dict with pks as keys to prevent duplicates
            names_dict[objdb.pk] = DisplayNames(
                objectdb=objdb, colored_name=attr.db_value
            )
        except IndexError:
            pass
    qs.delete()
    qs = Attribute.objects.filter(db_key="false_name")
    for attr in qs:
        try:
            objdb = attr.objectdb_set.all()[0]
            if not attr.db_value or not isinstance(attr.db_value, str):
                continue
            names_dict[objdb.pk].objectdb = objdb
            names_dict[objdb.pk].false_name = attr.db_value
        except IndexError:
            pass
    qs.delete()
    qs = Attribute.objects.filter(db_key="longname")
    for attr in qs:
        try:
            objdb = attr.objectdb_set.all()[0]
            if not attr.db_value or not isinstance(attr.db_value, str):
                continue
            names_dict[objdb.pk].objectdb = objdb
            names_dict[objdb.pk].longname = attr.db_value
        except IndexError:
            pass
    qs.delete()
    DisplayNames.objects.bulk_create(names_dict.values())


class Migration(migrations.Migration):

    dependencies = [
        ("object_extensions", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="DisplayNames",
            fields=[
                (
                    "objectdb",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="display_names",
                        serialize=False,
                        to="objects.ObjectDB",
                    ),
                ),
                ("false_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "colored_name",
                    models.TextField(blank=True, null=True),
                ),
                ("longname", models.TextField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
                "verbose_name_plural": "Display Names",
            },
        ),
        migrations.RunPython(convert_names, migrations.RunPython.noop, elidable=True),
    ]
