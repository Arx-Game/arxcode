# Generated by Django 2.2.20 on 2021-07-04 12:14

from django.db import migrations, models
from server.utils.progress_bar import ProgressBar


def populate_fields_from_attributes(apps, schema_editor):
    """
    converts attributes for portrait_height, portrait_width, pose_count,
    previous_pose_count, briefmode, and dice_string to columns on RosterEntry
    """
    Attribute = apps.get_model("typeclasses", "Attribute")
    attr_names = [
        "portrait_height",
        "portrait_width",
        "pose_count",
        "previous_posecount",
        "briefmode",
        "dice_string",
    ]

    def get_entry_and_value_from_attr(attribute):
        val = attribute.db_value
        char = attribute.objectdb_set.all()[0]
        return char.roster, val

    for attr_name in attr_names:
        attrs = Attribute.objects.filter(db_key=attr_name)
        if not attrs:
            continue
        num = 0
        total = len(attrs)
        print(f"\nConverting {attr_name}: {total} records.")
        failures = 0
        for attr in attrs:
            num += 1
            progress = num / total
            print(ProgressBar(progress, "Progress: "), end="\r", flush=True)
            try:
                entry, value = get_entry_and_value_from_attr(attr)
                if attr_name == "previous_posecount":
                    field_name = "previous_pose_count"
                    value = int(value)
                elif attr_name == "briefmode":
                    field_name = "brief_mode"
                    value = bool(value)
                elif attr_name == "dice_string":
                    field_name = attr_name
                    value = str(value)
                else:
                    field_name = attr_name
                    value = int(value)
                setattr(entry, field_name, value)
                entry.save()
            except (TypeError, ValueError, IndexError, AttributeError):
                failures += 1
            attr.delete()
        print(f"\nNum failures: {failures}")


class Migration(migrations.Migration):

    dependencies = [
        ("character", "0002_fix_character_dependencies"),
    ]

    operations = [
        migrations.AddField(
            model_name="rosterentry",
            name="portrait_height",
            field=models.PositiveSmallIntegerField(default=480),
        ),
        migrations.AddField(
            model_name="rosterentry",
            name="portrait_width",
            field=models.PositiveSmallIntegerField(default=320),
        ),
        migrations.AddField(
            model_name="rosterentry",
            name="pose_count",
            field=models.PositiveSmallIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="rosterentry",
            name="previous_pose_count",
            field=models.PositiveSmallIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="rosterentry",
            name="brief_mode",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="rosterentry",
            name="dice_string",
            field=models.TextField(blank=True),
        ),
        migrations.RunPython(
            populate_fields_from_attributes, migrations.RunPython.noop, elidable=True
        ),
    ]
