# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2016-08-31 06:32
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("objects", "0005_auto_20150403_2339"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AccountTransaction",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category", models.CharField(blank=True, max_length=255, null=True)),
                ("weekly_amount", models.PositiveIntegerField(blank=0, default=0)),
                ("do_weekly", models.BooleanField(default=True)),
                ("repetitions_left", models.SmallIntegerField(blank=-1, default=-1)),
            ],
        ),
        migrations.CreateModel(
            name="Agent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=80, null=True)),
                ("desc", models.TextField(blank=True, null=True)),
                (
                    "cost_per_guard",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                ("quantity", models.PositiveIntegerField(blank=0, default=0)),
                ("quality", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("type", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("secret", models.BooleanField(default=False)),
                ("unique", models.BooleanField(default=False)),
                ("xp", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("modifiers", models.TextField(blank=True, null=True)),
                ("loyalty", models.PositiveSmallIntegerField(blank=100, default=100)),
            ],
        ),
        migrations.CreateModel(
            name="AgentMission",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                ("success_level", models.SmallIntegerField(blank=0, default=0)),
                ("description", models.TextField(blank=True, null=True)),
                ("category", models.CharField(blank=True, max_length=80, null=True)),
                ("mission_details", models.TextField(blank=True, null=True)),
                ("results", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="AgentOb",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(blank=0, default=0)),
                ("status_notes", models.TextField(blank=True, null=True)),
                (
                    "agent_class",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agent_objects",
                        to="dominion.Agent",
                    ),
                ),
                (
                    "dbobj",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="objects.ObjectDB",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Army",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=80, null=True)),
                ("desc", models.TextField(blank=True, null=True)),
                ("stored_food", models.PositiveSmallIntegerField(blank=0, default=0)),
                (
                    "starvation_level",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                ("morale", models.PositiveSmallIntegerField(blank=100, default=100)),
                ("plunder", models.PositiveSmallIntegerField(blank=0, default=0)),
            ],
            options={
                "verbose_name_plural": "Armies",
            },
        ),
        migrations.CreateModel(
            name="AssetOwner",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("vault", models.PositiveIntegerField(blank=0, default=0)),
                ("prestige", models.IntegerField(blank=0, default=0)),
                ("economic", models.PositiveIntegerField(blank=0, default=0)),
                ("military", models.PositiveIntegerField(blank=0, default=0)),
                ("social", models.PositiveIntegerField(blank=0, default=0)),
            ],
        ),
        migrations.CreateModel(
            name="AssignedTask",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("finished", models.BooleanField(default=False)),
                ("week", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("notes", models.TextField(blank=True, null=True)),
                ("observer_text", models.TextField(blank=True, null=True)),
                ("alt_echo", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Castle",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("level", models.PositiveSmallIntegerField(default=1)),
                ("damage", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("name", models.CharField(blank=True, max_length=80, null=True)),
                ("desc", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="CraftingMaterials",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.PositiveIntegerField(blank=0, default=0)),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="materials",
                        to="dominion.AssetOwner",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Crafting Materials",
            },
        ),
        migrations.CreateModel(
            name="CraftingMaterialType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=80)),
                ("desc", models.TextField(blank=True, null=True)),
                ("value", models.PositiveIntegerField(blank=0, default=0)),
                ("category", models.CharField(blank=True, max_length=80, null=True)),
                ("acquisition_modifiers", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="CraftingRecipe",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("desc", models.TextField(blank=True, null=True)),
                (
                    "primary_amount",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                (
                    "secondary_amount",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                (
                    "tertiary_amount",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                ("difficulty", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("additional_cost", models.PositiveIntegerField(blank=0, default=0)),
                ("ability", models.CharField(blank=True, max_length=80, null=True)),
                ("skill", models.CharField(blank=True, max_length=80, null=True)),
                ("type", models.CharField(blank=True, max_length=80, null=True)),
                ("level", models.PositiveSmallIntegerField(blank=1, default=1)),
                ("result", models.TextField(blank=True, null=True)),
                ("allow_adorn", models.BooleanField(default=True)),
                (
                    "lock_storage",
                    models.TextField(
                        blank=True,
                        help_text=b"defined in setup_utils",
                        verbose_name=b"locks",
                    ),
                ),
                (
                    "known_by",
                    models.ManyToManyField(
                        blank=True, related_name="recipes", to="dominion.AssetOwner"
                    ),
                ),
                (
                    "primary_materials",
                    models.ManyToManyField(
                        blank=True,
                        related_name="recipes_primary",
                        to="dominion.CraftingMaterialType",
                    ),
                ),
                (
                    "secondary_materials",
                    models.ManyToManyField(
                        blank=True,
                        related_name="recipes_secondary",
                        to="dominion.CraftingMaterialType",
                    ),
                ),
                (
                    "tertiary_materials",
                    models.ManyToManyField(
                        blank=True,
                        related_name="recipes_tertiary",
                        to="dominion.CraftingMaterialType",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Crisis",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=80, null=True)),
                ("desc", models.TextField(blank=True, null=True)),
                ("escalation_points", models.SmallIntegerField(blank=0, default=0)),
                ("results", models.TextField(blank=True, null=True)),
                ("modifiers", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "Crises",
            },
        ),
        migrations.CreateModel(
            name="Domain",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=80, null=True)),
                ("desc", models.TextField(blank=True, null=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("destroyed", models.BooleanField(default=False)),
                (
                    "area",
                    models.PositiveSmallIntegerField(
                        blank=0,
                        default=0,
                        validators=[django.core.validators.MaxValueValidator(10000)],
                    ),
                ),
                ("stored_food", models.PositiveIntegerField(blank=0, default=0)),
                ("shipped_food", models.PositiveIntegerField(blank=0, default=0)),
                ("tax_rate", models.PositiveSmallIntegerField(blank=10, default=10)),
                ("num_mines", models.PositiveSmallIntegerField(blank=0, default=0)),
                (
                    "num_lumber_yards",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                ("num_mills", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("num_housing", models.PositiveIntegerField(blank=0, default=0)),
                ("num_farms", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("unassigned_serfs", models.PositiveIntegerField(blank=0, default=0)),
                (
                    "slave_labor_percentage",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                ("mining_serfs", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("lumber_serfs", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("farming_serfs", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("mill_serfs", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("lawlessness", models.PositiveSmallIntegerField(blank=0, default=0)),
                (
                    "amount_plundered",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                (
                    "income_modifier",
                    models.PositiveSmallIntegerField(blank=100, default=100),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DomainProject",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, b"Build Housing"),
                            (2, b"Build Farms"),
                            (3, b"Build Mines"),
                            (4, b"Build Mills"),
                            (5, b"Build Defenses"),
                            (6, b"Build Siege Weapons"),
                            (7, b"Muster Troops"),
                            (9, b"Build Troop Equipment"),
                        ],
                        default=1,
                    ),
                ),
                ("amount", models.PositiveSmallIntegerField(blank=1, default=1)),
                ("unit_type", models.PositiveSmallIntegerField(blank=1, default=1)),
                ("time_remaining", models.PositiveIntegerField(blank=1, default=1)),
                (
                    "castle",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects",
                        to="dominion.Castle",
                    ),
                ),
                (
                    "domain",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects",
                        to="dominion.Domain",
                    ),
                ),
                (
                    "military",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects",
                        to="dominion.Army",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HostileArea",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("desc", models.TextField(blank=True, null=True)),
                (
                    "area",
                    models.PositiveSmallIntegerField(
                        blank=0,
                        default=0,
                        validators=[django.core.validators.MaxValueValidator(10000)],
                    ),
                ),
                ("type", models.PositiveSmallIntegerField(blank=0, default=0)),
            ],
        ),
        migrations.CreateModel(
            name="InfluenceCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "verbose_name_plural": "Influence Categories",
            },
        ),
        migrations.CreateModel(
            name="Land",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=80, null=True)),
                ("desc", models.TextField(blank=True, null=True)),
                ("x_coord", models.SmallIntegerField(blank=0, default=0)),
                ("y_coord", models.SmallIntegerField(blank=0, default=0)),
                (
                    "terrain",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, b"Coast"),
                            (2, b"Desert"),
                            (3, b"Grassland"),
                            (4, b"Hill"),
                            (5, b"Mountain"),
                            (6, b"Ocean"),
                            (7, b"Plains"),
                            (8, b"Snow"),
                            (9, b"Tundra"),
                            (10, b"Forest"),
                            (11, b"Jungle"),
                            (12, b"Marsh"),
                            (13, b"Archipelago"),
                            (14, b"Flood Plains"),
                            (15, b"Ice"),
                            (16, b"Lakes"),
                            (17, b"Oasis"),
                        ],
                        default=7,
                    ),
                ),
                ("landlocked", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Member",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "work_this_week",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                ("work_total", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("secret", models.BooleanField(default=False)),
                ("deguilded", models.BooleanField(default=False)),
                ("rank", models.PositiveSmallIntegerField(blank=10, default=10)),
                (
                    "pc_exists",
                    models.BooleanField(
                        default=True,
                        help_text=b"Whether this member is a player character in the database",
                    ),
                ),
                ("desc", models.TextField(blank=True, default=True)),
                ("public_notes", models.TextField(blank=True, default=True)),
                ("officer_notes", models.TextField(blank=True, default=True)),
                (
                    "commanding_officer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="subordinates",
                        to="dominion.Member",
                    ),
                ),
                (
                    "object",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="objects.ObjectDB",
                    ),
                ),
            ],
            options={
                "ordering": ["rank"],
            },
        ),
        migrations.CreateModel(
            name="MilitaryUnit",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("unit_type", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("quantity", models.PositiveSmallIntegerField(blank=1, default=1)),
                ("level", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("equipment", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("xp", models.SmallIntegerField(blank=0, default=0)),
                (
                    "army",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="units",
                        to="dominion.Army",
                    ),
                ),
                (
                    "commander",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="units",
                        to="dominion.Member",
                    ),
                ),
                (
                    "hostile_area",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="units",
                        to="dominion.HostileArea",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Minister",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "category",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, b"Population"),
                            (1, b"Income"),
                            (2, b"Farming"),
                            (3, b"Productivity"),
                            (4, b"Upkeep"),
                            (5, b"Loyalty"),
                            (6, b"Warfare"),
                        ],
                        default=1,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Orders",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, b"Troop Training"),
                            (2, b"Explore territory"),
                            (3, b"Raid Domain"),
                            (4, b"Conquer Domain"),
                            (5, b"Enforce Order"),
                            (6, b"Besiege Castle"),
                            (7, b"March"),
                        ],
                        default=1,
                    ),
                ),
                ("coin_cost", models.PositiveIntegerField(blank=0, default=0)),
                ("food_cost", models.PositiveIntegerField(blank=0, default=0)),
                ("week", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("complete", models.BooleanField(default=False)),
                (
                    "army",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="dominion.Army",
                    ),
                ),
                (
                    "target_domain",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incoming_attacks",
                        to="dominion.Domain",
                    ),
                ),
                (
                    "target_land",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incoming_army",
                        to="dominion.Land",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Army Orders",
            },
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("desc", models.TextField(blank=True, null=True)),
                (
                    "rank_1_male",
                    models.CharField(
                        blank=True, default=b"Prince", max_length=255, null=True
                    ),
                ),
                (
                    "rank_1_female",
                    models.CharField(
                        blank=True, default=b"Princess", max_length=255, null=True
                    ),
                ),
                (
                    "rank_2_male",
                    models.CharField(
                        blank=True, default=b"Voice", max_length=255, null=True
                    ),
                ),
                (
                    "rank_2_female",
                    models.CharField(
                        blank=True, default=b"Voice", max_length=255, null=True
                    ),
                ),
                (
                    "rank_3_male",
                    models.CharField(
                        blank=True, default=b"Noble Family", max_length=255, null=True
                    ),
                ),
                (
                    "rank_3_female",
                    models.CharField(
                        blank=True, default=b"Noble Family", max_length=255, null=True
                    ),
                ),
                (
                    "rank_4_male",
                    models.CharField(
                        blank=True,
                        default=b"Trusted House Servants",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rank_4_female",
                    models.CharField(
                        blank=True,
                        default=b"Trusted House Servants",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rank_5_male",
                    models.CharField(
                        blank=True, default=b"Noble Vassals", max_length=255, null=True
                    ),
                ),
                (
                    "rank_5_female",
                    models.CharField(
                        blank=True, default=b"Noble Vassals", max_length=255, null=True
                    ),
                ),
                (
                    "rank_6_male",
                    models.CharField(
                        blank=True,
                        default=b"Vassals of Esteem",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rank_6_female",
                    models.CharField(
                        blank=True,
                        default=b"Vassals of Esteem",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rank_7_male",
                    models.CharField(
                        blank=True,
                        default=b"Known Commoners",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rank_7_female",
                    models.CharField(
                        blank=True,
                        default=b"Known Commoners",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rank_8_male",
                    models.CharField(
                        blank=True,
                        default=b"Sworn Commoners",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rank_8_female",
                    models.CharField(
                        blank=True,
                        default=b"Sworn Commoners",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rank_9_male",
                    models.CharField(
                        blank=True,
                        default=b"Forgotten Commoners",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rank_9_female",
                    models.CharField(
                        blank=True,
                        default=b"Forgotten Commoners",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rank_10_male",
                    models.CharField(
                        blank=True, default=b"Serf", max_length=255, null=True
                    ),
                ),
                (
                    "rank_10_female",
                    models.CharField(
                        blank=True, default=b"Serf", max_length=255, null=True
                    ),
                ),
                ("npc_members", models.PositiveIntegerField(blank=0, default=0)),
                (
                    "income_per_npc",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                ("cost_per_npc", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("morale", models.PositiveSmallIntegerField(blank=100, default=100)),
                (
                    "income_modifier",
                    models.PositiveSmallIntegerField(blank=100, default=100),
                ),
                ("allow_work", models.BooleanField(default=False)),
                ("secret", models.BooleanField(default=False)),
                (
                    "lock_storage",
                    models.TextField(
                        blank=True,
                        help_text=b"defined in setup_utils",
                        verbose_name=b"locks",
                    ),
                ),
                ("special_modifiers", models.TextField(blank=True, null=True)),
                ("motd", models.TextField(blank=True, null=True)),
                ("economic_modifier", models.SmallIntegerField(blank=0, default=0)),
                ("military_modifier", models.SmallIntegerField(blank=0, default=0)),
                ("social_modifier", models.SmallIntegerField(blank=0, default=0)),
                ("base_support_value", models.SmallIntegerField(blank=5, default=5)),
                (
                    "member_support_multiplier",
                    models.SmallIntegerField(blank=5, default=5),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OrgRelationship",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.SmallIntegerField(blank=0, default=0)),
                (
                    "orgs",
                    models.ManyToManyField(
                        blank=True,
                        related_name="relationships",
                        to="dominion.Organization",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlayerOrNpc",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("npc_name", models.CharField(blank=True, max_length=255, null=True)),
                ("alive", models.BooleanField(default=True)),
                (
                    "lifestyle_rating",
                    models.PositiveSmallIntegerField(blank=1, default=1),
                ),
                ("population", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("income", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("farming", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("productivity", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("upkeep", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("loyalty", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("warfare", models.PositiveSmallIntegerField(blank=0, default=0)),
                (
                    "parents",
                    models.ManyToManyField(
                        blank=True, related_name="children", to="dominion.PlayerOrNpc"
                    ),
                ),
                (
                    "patron",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="proteges",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                (
                    "player",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Dominion",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "spouses",
                    models.ManyToManyField(
                        blank=True,
                        related_name="_playerornpc_spouses_+",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=80, null=True)),
                ("origin_x_coord", models.SmallIntegerField(blank=0, default=0)),
                ("origin_y_coord", models.SmallIntegerField(blank=0, default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Renown",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rating", models.IntegerField(blank=0, default=0)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dominion.InfluenceCategory",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="renown",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Renown",
            },
        ),
        migrations.CreateModel(
            name="Reputation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("affection", models.IntegerField(blank=0, default=0)),
                ("respect", models.IntegerField(blank=0, default=0)),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reputations",
                        to="dominion.Organization",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reputations",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RPEvent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("desc", models.TextField(blank=True, null=True)),
                ("date", models.DateTimeField(blank=True, null=True)),
                (
                    "celebration_tier",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, b"Small"),
                            (1, b"Average"),
                            (2, b"Refined"),
                            (3, b"Grand"),
                            (4, b"Extravagant"),
                            (5, b"Legendary"),
                        ],
                        default=0,
                    ),
                ),
                ("gm_event", models.BooleanField(default=False)),
                ("public_event", models.BooleanField(default=True)),
                ("finished", models.BooleanField(default=False)),
                ("results", models.TextField(blank=True, null=True)),
                ("room_desc", models.TextField(blank=True, null=True)),
                (
                    "gms",
                    models.ManyToManyField(
                        blank=True, related_name="events_gmd", to="dominion.PlayerOrNpc"
                    ),
                ),
                (
                    "hosts",
                    models.ManyToManyField(
                        blank=True,
                        related_name="events_hosted",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events_held",
                        to="objects.ObjectDB",
                    ),
                ),
                (
                    "participants",
                    models.ManyToManyField(
                        blank=True,
                        related_name="events_attended",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Ruler",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "castellan",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                (
                    "house",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="estate",
                        to="dominion.AssetOwner",
                    ),
                ),
                (
                    "liege",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="vassals",
                        to="dominion.Ruler",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SphereOfInfluence",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rating", models.IntegerField(blank=0, default=0)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dominion.InfluenceCategory",
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="spheres",
                        to="dominion.Organization",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Spheres of Influence",
            },
        ),
        migrations.CreateModel(
            name="SupportUsed",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("week", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("rating", models.PositiveSmallIntegerField(blank=0, default=0)),
                (
                    "sphere",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage",
                        to="dominion.SphereOfInfluence",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=80, null=True)),
                ("category", models.CharField(blank=True, max_length=80, null=True)),
                ("room_echo", models.TextField(blank=True, null=True)),
                ("active", models.BooleanField(default=False)),
                ("week", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("desc", models.TextField(blank=True, null=True)),
                ("difficulty", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("results", models.TextField(blank=True, null=True)),
                (
                    "org",
                    models.ManyToManyField(
                        blank=True, related_name="tasks", to="dominion.Organization"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaskRequirement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "minimum_amount",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dominion.InfluenceCategory",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requirements",
                        to="dominion.Task",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaskSupporter",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fake", models.BooleanField(default=False)),
                ("observer_text", models.TextField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "player",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supported_tasks",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                (
                    "spheres",
                    models.ManyToManyField(
                        blank=True,
                        related_name="supported_tasks",
                        through="dominion.SupportUsed",
                        to="dominion.SphereOfInfluence",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supporters",
                        to="dominion.AssignedTask",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="supportused",
            name="supporter",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="allocation",
                to="dominion.TaskSupporter",
            ),
        ),
        migrations.AddField(
            model_name="minister",
            name="player",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="appointments",
                to="dominion.PlayerOrNpc",
            ),
        ),
        migrations.AddField(
            model_name="minister",
            name="ruler",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ministers",
                to="dominion.Ruler",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="organization",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="members",
                to="dominion.Organization",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="player",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="memberships",
                to="dominion.PlayerOrNpc",
            ),
        ),
        migrations.AddField(
            model_name="land",
            name="region",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="dominion.Region",
            ),
        ),
        migrations.AddField(
            model_name="influencecategory",
            name="orgs",
            field=models.ManyToManyField(
                through="dominion.SphereOfInfluence", to="dominion.Organization"
            ),
        ),
        migrations.AddField(
            model_name="influencecategory",
            name="players",
            field=models.ManyToManyField(
                through="dominion.Renown", to="dominion.PlayerOrNpc"
            ),
        ),
        migrations.AddField(
            model_name="influencecategory",
            name="tasks",
            field=models.ManyToManyField(
                through="dominion.TaskRequirement", to="dominion.Task"
            ),
        ),
        migrations.AddField(
            model_name="hostilearea",
            name="land",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="hostiles",
                to="dominion.Land",
            ),
        ),
        migrations.AddField(
            model_name="domainproject",
            name="unit",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="projects",
                to="dominion.MilitaryUnit",
            ),
        ),
        migrations.AddField(
            model_name="domain",
            name="land",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="domains",
                to="dominion.Land",
            ),
        ),
        migrations.AddField(
            model_name="domain",
            name="ruler",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="holdings",
                to="dominion.Ruler",
            ),
        ),
        migrations.AddField(
            model_name="crisis",
            name="orgs",
            field=models.ManyToManyField(
                blank=True, related_name="crises", to="dominion.Organization"
            ),
        ),
        migrations.AddField(
            model_name="crisis",
            name="parent_crisis",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="child_crises",
                to="dominion.Crisis",
            ),
        ),
        migrations.AddField(
            model_name="craftingmaterials",
            name="type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="dominion.CraftingMaterialType",
            ),
        ),
        migrations.AddField(
            model_name="castle",
            name="domain",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="castles",
                to="dominion.Domain",
            ),
        ),
        migrations.AddField(
            model_name="assignedtask",
            name="member",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tasks",
                to="dominion.Member",
            ),
        ),
        migrations.AddField(
            model_name="assignedtask",
            name="task",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="assigned_tasks",
                to="dominion.Task",
            ),
        ),
        migrations.AddField(
            model_name="assetowner",
            name="organization_owner",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="assets",
                to="dominion.Organization",
            ),
        ),
        migrations.AddField(
            model_name="assetowner",
            name="player",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="assets",
                to="dominion.PlayerOrNpc",
            ),
        ),
        migrations.AddField(
            model_name="army",
            name="castle",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="garrison",
                to="dominion.Castle",
            ),
        ),
        migrations.AddField(
            model_name="army",
            name="commander",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="armies",
                to="dominion.Member",
            ),
        ),
        migrations.AddField(
            model_name="army",
            name="domain",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="armies",
                to="dominion.Domain",
            ),
        ),
        migrations.AddField(
            model_name="army",
            name="land",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="armies",
                to="dominion.Land",
            ),
        ),
        migrations.AddField(
            model_name="army",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="armies",
                to="dominion.AssetOwner",
            ),
        ),
        migrations.AddField(
            model_name="agentmission",
            name="agentob",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="missions",
                to="dominion.AgentOb",
            ),
        ),
        migrations.AddField(
            model_name="agent",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="agents",
                to="dominion.AssetOwner",
            ),
        ),
        migrations.AddField(
            model_name="accounttransaction",
            name="receiver",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="incomes",
                to="dominion.AssetOwner",
            ),
        ),
        migrations.AddField(
            model_name="accounttransaction",
            name="sender",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="debts",
                to="dominion.AssetOwner",
            ),
        ),
    ]
