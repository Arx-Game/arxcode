# Generated by Django 2.2.16 on 2020-11-22 00:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("objects", "0009_remove_objectdb_db_player"),
        ("comms", "0015_auto_20170706_2041"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("objects", "0011_auto_20191025_0831"),
        ("objects", "0005_auto_20150403_2339"),
    ]

    operations = [
        migrations.CreateModel(
            name="Agent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=80)),
                ("desc", models.TextField(blank=True)),
                ("cost_per_guard", models.PositiveSmallIntegerField(default=0)),
                ("quantity", models.PositiveIntegerField(default=0)),
                ("quality", models.PositiveSmallIntegerField(default=0)),
                (
                    "type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Guard"),
                            (1, "Thug"),
                            (2, "Spy"),
                            (3, "Assistant"),
                            (4, "Champion"),
                            (5, "Animal"),
                            (6, "Small Animal"),
                        ],
                        default=0,
                    ),
                ),
                ("secret", models.BooleanField(default=False)),
                ("unique", models.BooleanField(default=False)),
                ("xp", models.PositiveSmallIntegerField(default=0)),
                ("modifiers", models.TextField(blank=True)),
                ("loyalty", models.PositiveSmallIntegerField(default=100)),
                ("colored_name", models.CharField(blank=True, max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name="AgentOb",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(blank=0, default=0)),
                ("status_notes", models.TextField(blank=True, null=True)),
                (
                    "agent_class",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agent_objects",
                        to="dominion.Agent",
                    ),
                ),
                (
                    "dbobj",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="objects.ObjectDB",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AssetOwner",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("vault", models.PositiveIntegerField(blank=0, default=0)),
                ("fame", models.IntegerField(blank=0, default=0)),
                ("economic", models.PositiveIntegerField(blank=0, default=0)),
                ("military", models.PositiveIntegerField(blank=0, default=0)),
                ("social", models.PositiveIntegerField(blank=0, default=0)),
            ],
        ),
        migrations.CreateModel(
            name="AssignedTask",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("finished", models.BooleanField(default=False)),
                (
                    "week",
                    models.PositiveSmallIntegerField(blank=0, db_index=True, default=0),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("observer_text", models.TextField(blank=True, null=True)),
                ("alt_echo", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="CraftingMaterialType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=80)),
                ("desc", models.TextField(blank=True, null=True)),
                ("value", models.PositiveIntegerField(blank=0, default=0)),
                (
                    "category",
                    models.CharField(
                        blank=True, db_index=True, max_length=80, null=True
                    ),
                ),
                ("acquisition_modifiers", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="HostileArea",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("desc", models.TextField(blank=True, null=True)),
                (
                    "area",
                    models.PositiveSmallIntegerField(
                        blank=0,
                        default=0,
                        validators=[django.core.validators.MaxValueValidator(10000)],
                    ),
                ),
                ("type", models.PositiveSmallIntegerField(blank=0, default=0)),
            ],
        ),
        migrations.CreateModel(
            name="InfluenceCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=255, unique=True)),
            ],
            options={
                "verbose_name_plural": "Influence Categories",
            },
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_index=True, max_length=255, null=True
                    ),
                ),
                ("desc", models.TextField(blank=True, null=True)),
                (
                    "rank_1_male",
                    models.CharField(
                        blank=True, default=b"Prince", max_length=255, null=True
                    ),
                ),
                (
                    "rank_1_female",
                    models.CharField(
                        blank=True, default=b"Princess", max_length=255, null=True
                    ),
                ),
                (
                    "rank_2_male",
                    models.CharField(
                        blank=True, default=b"Voice", max_length=255, null=True
                    ),
                ),
                (
                    "rank_2_female",
                    models.CharField(
                        blank=True, default=b"Voice", max_length=255, null=True
                    ),
                ),
                (
                    "rank_3_male",
                    models.CharField(
                        blank=True, default=b"Noble Family", max_length=255, null=True
                    ),
                ),
                (
                    "rank_3_female",
                    models.CharField(
                        blank=True, default=b"Noble Family", max_length=255, null=True
                    ),
                ),
                (
                    "rank_4_male",
                    models.CharField(
                        blank=True,
                        default=b"Trusted House Servants",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rank_4_female",
                    models.CharField(
                        blank=True,
                        default=b"Trusted House Servants",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rank_5_male",
                    models.CharField(
                        blank=True, default=b"Noble Vassals", max_length=255, null=True
                    ),
                ),
                (
                    "rank_5_female",
                    models.CharField(
                        blank=True, default=b"Noble Vassals", max_length=255, null=True
                    ),
                ),
                (
                    "rank_6_male",
                    models.CharField(
                        blank=True,
                        default=b"Vassals of Esteem",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rank_6_female",
                    models.CharField(
                        blank=True,
                        default=b"Vassals of Esteem",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rank_7_male",
                    models.CharField(
                        blank=True,
                        default=b"Known Commoners",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rank_7_female",
                    models.CharField(
                        blank=True,
                        default=b"Known Commoners",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rank_8_male",
                    models.CharField(
                        blank=True,
                        default=b"Sworn Commoners",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rank_8_female",
                    models.CharField(
                        blank=True,
                        default=b"Sworn Commoners",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rank_9_male",
                    models.CharField(
                        blank=True,
                        default=b"Forgotten Commoners",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rank_9_female",
                    models.CharField(
                        blank=True,
                        default=b"Forgotten Commoners",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "rank_10_male",
                    models.CharField(
                        blank=True, default=b"Serf", max_length=255, null=True
                    ),
                ),
                (
                    "rank_10_female",
                    models.CharField(
                        blank=True, default=b"Serf", max_length=255, null=True
                    ),
                ),
                ("npc_members", models.PositiveIntegerField(blank=0, default=0)),
                (
                    "income_per_npc",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                ("cost_per_npc", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("morale", models.PositiveSmallIntegerField(blank=100, default=100)),
                (
                    "income_modifier",
                    models.PositiveSmallIntegerField(blank=100, default=100),
                ),
                ("allow_work", models.BooleanField(default=False)),
                ("secret", models.BooleanField(default=False)),
                (
                    "lock_storage",
                    models.TextField(
                        blank=True,
                        help_text=b"defined in setup_utils",
                        verbose_name=b"locks",
                    ),
                ),
                ("special_modifiers", models.TextField(blank=True, null=True)),
                ("motd", models.TextField(blank=True, null=True)),
                ("base_support_value", models.SmallIntegerField(default=5)),
                (
                    "member_support_multiplier",
                    models.SmallIntegerField(default=5),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True, default="noble", max_length=255, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlayerOrNpc",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("npc_name", models.CharField(blank=True, max_length=255, null=True)),
                ("alive", models.BooleanField(blank=True, default=True)),
                (
                    "lifestyle_rating",
                    models.PositiveSmallIntegerField(blank=1, default=1),
                ),
                ("population", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("income", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("farming", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("productivity", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("upkeep", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("loyalty", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("warfare", models.PositiveSmallIntegerField(blank=0, default=0)),
                (
                    "parents",
                    models.ManyToManyField(
                        blank=True, related_name="children", to="dominion.PlayerOrNpc"
                    ),
                ),
                (
                    "patron",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="proteges",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                (
                    "player",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Dominion",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "spouses",
                    models.ManyToManyField(
                        blank=True,
                        related_name="_playerornpc_spouses_+",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=80, null=True)),
                ("origin_x_coord", models.SmallIntegerField(blank=0, default=0)),
                ("origin_y_coord", models.SmallIntegerField(blank=0, default=0)),
                ("color_code", models.CharField(blank=True, max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name="Renown",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rating", models.IntegerField(blank=0, default=0)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dominion.InfluenceCategory",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="renown",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Renown",
                "unique_together": {("category", "player")},
            },
        ),
        migrations.CreateModel(
            name="Ruler",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "castellan",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                (
                    "house",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="estate",
                        to="dominion.AssetOwner",
                    ),
                ),
                (
                    "liege",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="vassals",
                        to="dominion.Ruler",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SphereOfInfluence",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rating", models.IntegerField(blank=0, default=0)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dominion.InfluenceCategory",
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="spheres",
                        to="dominion.Organization",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Spheres of Influence",
                "unique_together": {("category", "org")},
            },
        ),
        migrations.CreateModel(
            name="SupportUsed",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("week", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("rating", models.PositiveSmallIntegerField(blank=0, default=0)),
                (
                    "sphere",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage",
                        to="dominion.SphereOfInfluence",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_index=True, max_length=80, null=True
                    ),
                ),
                ("category", models.CharField(blank=True, max_length=80, null=True)),
                ("room_echo", models.TextField(blank=True, null=True)),
                ("active", models.BooleanField(default=False)),
                (
                    "week",
                    models.PositiveSmallIntegerField(blank=0, db_index=True, default=0),
                ),
                ("desc", models.TextField(blank=True, null=True)),
                ("difficulty", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("results", models.TextField(blank=True, null=True)),
                (
                    "org",
                    models.ManyToManyField(
                        blank=True,
                        db_index=True,
                        related_name="tasks",
                        to="dominion.Organization",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaskRequirement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "minimum_amount",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dominion.InfluenceCategory",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requirements",
                        to="dominion.Task",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaskSupporter",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fake", models.BooleanField(default=False)),
                ("observer_text", models.TextField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "player",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supported_tasks",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                (
                    "spheres",
                    models.ManyToManyField(
                        blank=True,
                        related_name="supported_tasks",
                        through="dominion.SupportUsed",
                        to="dominion.SphereOfInfluence",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supporters",
                        to="dominion.AssignedTask",
                    ),
                ),
                (
                    "additional_points",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Member",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "work_this_week",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                ("work_total", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("secret", models.BooleanField(default=False)),
                ("deguilded", models.BooleanField(default=False)),
                ("rank", models.PositiveSmallIntegerField(blank=10, default=10)),
                (
                    "pc_exists",
                    models.BooleanField(
                        blank=True,
                        default=True,
                        help_text="Whether this member is a player character in the database",
                    ),
                ),
                ("desc", models.TextField(blank=True)),
                ("public_notes", models.TextField(blank=True)),
                ("officer_notes", models.TextField(blank=True)),
                (
                    "commanding_officer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="subordinates",
                        to="dominion.Member",
                    ),
                ),
                (
                    "object",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="objects.ObjectDB",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="dominion.Organization",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                ("has_seen_motd", models.BooleanField(default=False)),
                ("investment_this_week", models.SmallIntegerField(default=0)),
                ("investment_total", models.SmallIntegerField(default=0)),
                (
                    "story_coordinator",
                    models.BooleanField(
                        default=False,
                        verbose_name="Whether they're a coordinator for this org",
                    ),
                ),
            ],
            options={
                "ordering": ["rank"],
            },
        ),
        migrations.CreateModel(
            name="Land",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=80, null=True)),
                ("desc", models.TextField(blank=True, null=True)),
                ("x_coord", models.SmallIntegerField(blank=0, default=0)),
                ("y_coord", models.SmallIntegerField(blank=0, default=0)),
                (
                    "terrain",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Coast"),
                            (2, "Desert"),
                            (3, "Grassland"),
                            (4, "Hill"),
                            (5, "Mountain"),
                            (6, "Ocean"),
                            (7, "Plains"),
                            (8, "Snow"),
                            (9, "Tundra"),
                            (10, "Forest"),
                            (11, "Jungle"),
                            (12, "Marsh"),
                            (13, "Archipelago"),
                            (14, "Flood Plains"),
                            (15, "Ice"),
                            (16, "Lakes"),
                            (17, "Oasis"),
                        ],
                        default=7,
                    ),
                ),
                ("landlocked", models.BooleanField(blank=True, default=True)),
                (
                    "region",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="dominion.Region",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Domain",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=80, null=True)),
                ("desc", models.TextField(blank=True, null=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("destroyed", models.BooleanField(default=False)),
                (
                    "area",
                    models.PositiveSmallIntegerField(
                        blank=0,
                        default=0,
                        validators=[django.core.validators.MaxValueValidator(10000)],
                    ),
                ),
                ("stored_food", models.PositiveIntegerField(blank=0, default=0)),
                ("shipped_food", models.PositiveIntegerField(blank=0, default=0)),
                ("tax_rate", models.PositiveSmallIntegerField(blank=10, default=10)),
                ("num_mines", models.PositiveSmallIntegerField(blank=0, default=0)),
                (
                    "num_lumber_yards",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                ("num_mills", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("num_housing", models.PositiveIntegerField(blank=0, default=0)),
                ("num_farms", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("unassigned_serfs", models.PositiveIntegerField(blank=0, default=0)),
                (
                    "slave_labor_percentage",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                ("mining_serfs", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("lumber_serfs", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("farming_serfs", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("mill_serfs", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("lawlessness", models.PositiveSmallIntegerField(blank=0, default=0)),
                (
                    "amount_plundered",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                (
                    "income_modifier",
                    models.PositiveSmallIntegerField(blank=100, default=100),
                ),
                (
                    "ruler",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="holdings",
                        to="dominion.Ruler",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Castle",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("level", models.PositiveSmallIntegerField(default=1)),
                ("damage", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("name", models.CharField(blank=True, max_length=80, null=True)),
                ("desc", models.TextField(blank=True, null=True)),
                (
                    "domain",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="castles",
                        to="dominion.Domain",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="assetowner",
            name="organization_owner",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="assets",
                to="dominion.Organization",
            ),
        ),
        migrations.AddField(
            model_name="assetowner",
            name="player",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="assets",
                to="dominion.PlayerOrNpc",
            ),
        ),
        migrations.CreateModel(
            name="Plot",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_index=True, max_length=255, null=True
                    ),
                ),
                ("desc", models.TextField(blank=True, null=True)),
                ("escalation_points", models.SmallIntegerField(blank=0, default=0)),
                ("results", models.TextField(blank=True, null=True)),
                ("modifiers", models.TextField(blank=True, null=True)),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                (
                    "headline",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name=b"News-style bulletin",
                    ),
                ),
                ("public", models.BooleanField(default=True)),
                ("resolved", models.BooleanField(default=False)),
                ("start_date", models.DateTimeField(blank=True, null=True)),
                (
                    "usage",
                    models.SmallIntegerField(
                        choices=[
                            (0, "Crisis"),
                            (1, "GM Plot"),
                            (2, "Player-Run Plot"),
                            (3, "Pitch"),
                        ],
                        default=0,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Crises",
            },
        ),
        migrations.CreateModel(
            name="Army",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_index=True, max_length=80, null=True
                    ),
                ),
                ("desc", models.TextField(blank=True, null=True)),
                ("stored_food", models.PositiveSmallIntegerField(blank=0, default=0)),
                (
                    "starvation_level",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                ("morale", models.PositiveSmallIntegerField(blank=100, default=100)),
                ("plunder", models.PositiveSmallIntegerField(blank=0, default=0)),
                (
                    "castle",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="garrison",
                        to="dominion.Castle",
                    ),
                ),
                (
                    "domain",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="armies",
                        to="dominion.Domain",
                    ),
                ),
                (
                    "land",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="armies",
                        to="dominion.Land",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="armies",
                        to="dominion.AssetOwner",
                    ),
                ),
                (
                    "general",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="armies",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="armies",
                        to="dominion.Army",
                    ),
                ),
                (
                    "temp_owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="loaned_armies",
                        to="dominion.AssetOwner",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Armies",
            },
        ),
        migrations.AddField(
            model_name="assetowner",
            name="min_materials_for_inform",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="assetowner",
            name="min_resources_for_inform",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="assetowner",
            name="min_silver_for_inform",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="influencecategory",
            name="orgs",
            field=models.ManyToManyField(
                through="dominion.SphereOfInfluence", to="dominion.Organization"
            ),
        ),
        migrations.AddField(
            model_name="influencecategory",
            name="players",
            field=models.ManyToManyField(
                through="dominion.Renown", to="dominion.PlayerOrNpc"
            ),
        ),
        migrations.CreateModel(
            name="MapLocation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=80, null=True)),
                (
                    "x_coord",
                    models.PositiveSmallIntegerField(
                        default=0,
                        validators=[django.core.validators.MaxValueValidator(9)],
                    ),
                ),
                (
                    "y_coord",
                    models.PositiveSmallIntegerField(
                        default=0,
                        validators=[django.core.validators.MaxValueValidator(9)],
                    ),
                ),
                (
                    "land",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="locations",
                        to="dominion.Land",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="domain",
            name="location",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="domains",
                to="dominion.MapLocation",
            ),
        ),
        migrations.AddField(
            model_name="influencecategory",
            name="tasks",
            field=models.ManyToManyField(
                through="dominion.TaskRequirement", to="dominion.Task"
            ),
        ),
        migrations.AddField(
            model_name="hostilearea",
            name="land",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="hostiles",
                to="dominion.Land",
            ),
        ),
        migrations.CreateModel(
            name="CraftingMaterials",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.PositiveIntegerField(blank=0, default=0)),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="materials",
                        to="dominion.AssetOwner",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dominion.CraftingMaterialType",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Crafting Materials",
            },
        ),
        migrations.CreateModel(
            name="PlotRoom",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=78)),
                ("description", models.TextField(max_length=4096)),
                ("public", models.BooleanField(default=False)),
                ("wilderness", models.BooleanField(default=True)),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_plot_rooms",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                (
                    "domain",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="plot_rooms",
                        to="dominion.Domain",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="plot_rooms",
                        to="dominion.MapLocation",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkSetting",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("stat", models.CharField(blank=True, max_length=80, null=True)),
                ("skill", models.CharField(blank=True, max_length=80, null=True)),
                (
                    "resource",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Economic"), (1, "Military"), (2, "Social")],
                        default=0,
                    ),
                ),
                ("message", models.TextField(blank=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="work_settings",
                        to="dominion.Organization",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="assetowner",
            name="legend",
            field=models.IntegerField(blank=0, default=0),
        ),
        migrations.CreateModel(
            name="CharitableDonation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.PositiveIntegerField(default=0)),
                (
                    "giver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="donations",
                        to="dominion.AssetOwner",
                    ),
                ),
                (
                    "npc_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="donations",
                        to="dominion.InfluenceCategory",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="donations",
                        to="dominion.Organization",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Honorific",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(db_index=True, max_length=200)),
                ("description", models.TextField()),
                ("amount", models.IntegerField(default=0)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="honorifics",
                        to="dominion.AssetOwner",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Propriety",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=120, unique=True)),
                ("percentage", models.SmallIntegerField(default=0)),
                (
                    "owners",
                    models.ManyToManyField(
                        related_name="proprieties", to="dominion.AssetOwner"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RPEvent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=255)),
                ("desc", models.TextField(blank=True, null=True)),
                ("date", models.DateTimeField(blank=True, null=True)),
                (
                    "celebration_tier",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[
                            (0, b"Small"),
                            (1, b"Average"),
                            (2, b"Refined"),
                            (3, b"Grand"),
                            (4, b"Extravagant"),
                            (5, b"Legendary"),
                        ],
                        default=0,
                    ),
                ),
                ("gm_event", models.BooleanField(default=False)),
                ("public_event", models.BooleanField(default=True)),
                ("finished", models.BooleanField(default=False)),
                ("results", models.TextField(blank=True, null=True)),
                ("room_desc", models.TextField(blank=True, null=True)),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="events_held",
                        to="objects.ObjectDB",
                    ),
                ),
                (
                    "plotroom",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events_held_here",
                        to="dominion.PlotRoom",
                    ),
                ),
                (
                    "risk",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[
                            (0, b"No Risk"),
                            (1, b"Minimal Risk"),
                            (2, b"Low Risk"),
                            (3, b"Reduced Risk"),
                            (4, b"Normal Risk"),
                            (5, b"Slightly Elevated Risk"),
                            (6, b"Moderately Elevated Risk"),
                            (7, b"Highly Elevated Risk"),
                            (8, b"Very High Risk"),
                            (9, b"Extreme Risk"),
                            (10, b"Suicidal Risk"),
                        ],
                        default=4,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PCEventParticipation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Main Host"), (1, "Host"), (2, "Guest")], default=2
                    ),
                ),
                ("gm", models.BooleanField(default=False)),
                ("attended", models.BooleanField(default=False)),
                (
                    "dompc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_participation",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pc_event_participation",
                        to="dominion.RPEvent",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OrgEventParticipation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "social",
                    models.PositiveSmallIntegerField(
                        default=0,
                        verbose_name="Social Resources spent by the Org Sponsor",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="org_event_participation",
                        to="dominion.RPEvent",
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_participation",
                        to="dominion.Organization",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="rpevent",
            name="dompcs",
            field=models.ManyToManyField(
                blank=True,
                related_name="events",
                through="dominion.PCEventParticipation",
                to="dominion.PlayerOrNpc",
            ),
        ),
        migrations.AddField(
            model_name="rpevent",
            name="orgs",
            field=models.ManyToManyField(
                blank=True,
                related_name="events",
                through="dominion.OrgEventParticipation",
                to="dominion.Organization",
            ),
        ),
        migrations.AddField(
            model_name="assignedtask",
            name="member",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tasks",
                to="dominion.Member",
            ),
        ),
        migrations.AddField(
            model_name="assignedtask",
            name="task",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="assigned_tasks",
                to="dominion.Task",
            ),
        ),
        migrations.CreateModel(
            name="Fealty",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
            ],
            options={
                "abstract": False,
                "verbose_name_plural": "Fealties",
            },
        ),
        migrations.AddField(
            model_name="organization",
            name="fealty",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="orgs",
                to="dominion.Fealty",
            ),
        ),
        migrations.AddField(
            model_name="organization",
            name="org_board",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="org",
                to="objects.ObjectDB",
            ),
        ),
        migrations.AddField(
            model_name="organization",
            name="org_channel",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="org",
                to="comms.ChannelDB",
            ),
        ),
        migrations.AddField(
            model_name="agent",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="agents",
                to="dominion.AssetOwner",
            ),
        ),
        migrations.AddField(
            model_name="organization",
            name="economic_influence",
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="organization",
            name="military_influence",
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="organization",
            name="social_influence",
            field=models.IntegerField(default=0),
        ),
        migrations.CreateModel(
            name="OrgPlotInvolvement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("auto_invite_members", models.BooleanField(default=False)),
                ("gm_notes", models.TextField(blank=True)),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="plot_involvement",
                        to="dominion.Organization",
                    ),
                ),
                (
                    "plot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="org_involvement",
                        to="dominion.Plot",
                    ),
                ),
                (
                    "rank_requirement",
                    models.PositiveSmallIntegerField(blank=True, default=10),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="plot",
            name="orgs",
            field=models.ManyToManyField(
                blank=True,
                related_name="plots",
                through="dominion.OrgPlotInvolvement",
                to="dominion.Organization",
            ),
        ),
        migrations.CreateModel(
            name="PCPlotInvolvement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cast_status",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Required Cast"),
                            (1, "Main Cast"),
                            (2, "Supporting Cast"),
                            (3, "Extra"),
                            (4, "Tangential"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "activity_status",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Active"),
                            (1, "Inactive"),
                            (2, "Invited"),
                            (3, "Has RP Hook"),
                            (4, "Left"),
                            (5, "Not Added"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "admin_status",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (4, "Owner"),
                            (3, "GM"),
                            (2, "Recruiter"),
                            (1, "Player"),
                            (0, "Submitting Player"),
                        ],
                        default=1,
                    ),
                ),
                ("recruiter_story", models.TextField(blank=True)),
                ("gm_notes", models.TextField(blank=True)),
                (
                    "dompc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="plot_involvement",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                (
                    "recruited_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="plot_recruits",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                (
                    "plot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dompc_involvement",
                        to="dominion.Plot",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="plot",
            name="dompcs",
            field=models.ManyToManyField(
                blank=True,
                related_name="plots",
                through="dominion.PCPlotInvolvement",
                to="dominion.PlayerOrNpc",
            ),
        ),
        migrations.AddField(
            model_name="plot",
            name="parent_plot",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="subplots",
                to="dominion.Plot",
            ),
        ),
        migrations.CreateModel(
            name="PlotUpdate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "desc",
                    models.TextField(
                        blank=True, verbose_name="Story of what happened this update"
                    ),
                ),
                (
                    "gm_notes",
                    models.TextField(blank=True, verbose_name="Staff-visible notes"),
                ),
                ("date", models.DateTimeField(blank=True, null=True)),
                (
                    "ooc_notes",
                    models.TextField(
                        blank=True, verbose_name="Player-visible ooc notes"
                    ),
                ),
                (
                    "plot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updates",
                        to="dominion.Plot",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="rpevent",
            name="beat",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="events",
                to="dominion.PlotUpdate",
            ),
        ),
        migrations.AlterModelOptions(
            name="plot",
            options={"verbose_name_plural": "Plots"},
        ),
        migrations.CreateModel(
            name="PrestigeCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30)),
                ("male_noun", models.CharField(max_length=30)),
                ("female_noun", models.CharField(max_length=30)),
                ("description", models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PrestigeTier",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rank_name", models.CharField(max_length=30)),
                ("minimum_prestige", models.PositiveIntegerField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="supportused",
            name="supporter",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="allocation",
                to="dominion.TaskSupporter",
            ),
        ),
        migrations.CreateModel(
            name="AccountTransaction",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category", models.CharField(blank=True, max_length=255, null=True)),
                ("weekly_amount", models.PositiveIntegerField(blank=0, default=0)),
                ("do_weekly", models.BooleanField(blank=True, default=True)),
                ("repetitions_left", models.SmallIntegerField(blank=-1, default=-1)),
                (
                    "receiver",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incomes",
                        to="dominion.AssetOwner",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="debts",
                        to="dominion.AssetOwner",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AgentMission",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("active", models.BooleanField(blank=True, default=True)),
                ("success_level", models.SmallIntegerField(blank=0, default=0)),
                ("description", models.TextField(blank=True, null=True)),
                ("category", models.CharField(blank=True, max_length=80, null=True)),
                ("mission_details", models.TextField(blank=True, null=True)),
                ("results", models.TextField(blank=True, null=True)),
                (
                    "agentob",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="missions",
                        to="dominion.AgentOb",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CraftingRecipe",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_index=True, max_length=255, null=True
                    ),
                ),
                ("desc", models.TextField(blank=True, null=True)),
                (
                    "primary_amount",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                (
                    "secondary_amount",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                (
                    "tertiary_amount",
                    models.PositiveSmallIntegerField(blank=0, default=0),
                ),
                ("difficulty", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("additional_cost", models.PositiveIntegerField(blank=0, default=0)),
                (
                    "ability",
                    models.CharField(
                        blank=True, db_index=True, max_length=80, null=True
                    ),
                ),
                (
                    "skill",
                    models.CharField(
                        blank=True, db_index=True, max_length=80, null=True
                    ),
                ),
                ("type", models.CharField(blank=True, max_length=80, null=True)),
                ("level", models.PositiveSmallIntegerField(blank=1, default=1)),
                ("result", models.TextField(blank=True, null=True)),
                ("allow_adorn", models.BooleanField(blank=True, default=True)),
                (
                    "lock_storage",
                    models.TextField(
                        blank=True,
                        help_text="defined in setup_utils",
                        verbose_name="locks",
                    ),
                ),
                (
                    "known_by",
                    models.ManyToManyField(
                        blank=True,
                        db_index=True,
                        related_name="recipes",
                        to="dominion.AssetOwner",
                    ),
                ),
                (
                    "primary_materials",
                    models.ManyToManyField(
                        blank=True,
                        related_name="recipes_primary",
                        to="dominion.CraftingMaterialType",
                    ),
                ),
                (
                    "secondary_materials",
                    models.ManyToManyField(
                        blank=True,
                        related_name="recipes_secondary",
                        to="dominion.CraftingMaterialType",
                    ),
                ),
                (
                    "tertiary_materials",
                    models.ManyToManyField(
                        blank=True,
                        related_name="recipes_tertiary",
                        to="dominion.CraftingMaterialType",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Landmark",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=32)),
                ("description", models.TextField(max_length=2048)),
                (
                    "landmark_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Unknown"),
                            (1, "Faith"),
                            (2, "Cultural"),
                            (3, "Historical"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="landmarks",
                        to="dominion.MapLocation",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Minister",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "category",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Population"),
                            (1, "Income"),
                            (2, "Farming"),
                            (3, "Productivity"),
                            (4, "Upkeep"),
                            (5, "Loyalty"),
                            (6, "Warfare"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                (
                    "ruler",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ministers",
                        to="dominion.Ruler",
                    ),
                ),
            ],
        ),
        migrations.AlterField(
            model_name="organization",
            name="category",
            field=models.CharField(
                blank=True, default="noble", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="lock_storage",
            field=models.TextField(
                blank=True, help_text="defined in setup_utils", verbose_name="locks"
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="rank_10_female",
            field=models.CharField(
                blank=True, default="Serf", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="rank_10_male",
            field=models.CharField(
                blank=True, default="Serf", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="rank_1_female",
            field=models.CharField(
                blank=True, default="Princess", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="rank_1_male",
            field=models.CharField(
                blank=True, default="Prince", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="rank_2_female",
            field=models.CharField(
                blank=True, default="Voice", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="rank_2_male",
            field=models.CharField(
                blank=True, default="Voice", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="rank_3_female",
            field=models.CharField(
                blank=True, default="Noble Family", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="rank_3_male",
            field=models.CharField(
                blank=True, default="Noble Family", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="rank_4_female",
            field=models.CharField(
                blank=True, default="Trusted House Servants", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="rank_4_male",
            field=models.CharField(
                blank=True, default="Trusted House Servants", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="rank_5_female",
            field=models.CharField(
                blank=True, default="Noble Vassals", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="rank_5_male",
            field=models.CharField(
                blank=True, default="Noble Vassals", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="rank_6_female",
            field=models.CharField(
                blank=True, default="Vassals of Esteem", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="rank_6_male",
            field=models.CharField(
                blank=True, default="Vassals of Esteem", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="rank_7_female",
            field=models.CharField(
                blank=True, default="Known Commoners", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="rank_7_male",
            field=models.CharField(
                blank=True, default="Known Commoners", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="rank_8_female",
            field=models.CharField(
                blank=True, default="Sworn Commoners", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="rank_8_male",
            field=models.CharField(
                blank=True, default="Sworn Commoners", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="rank_9_female",
            field=models.CharField(
                blank=True, default="Forgotten Commoners", max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="rank_9_male",
            field=models.CharField(
                blank=True, default="Forgotten Commoners", max_length=255, null=True
            ),
        ),
        migrations.CreateModel(
            name="OrgRelationship",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.SmallIntegerField(blank=0, default=0)),
                (
                    "orgs",
                    models.ManyToManyField(
                        blank=True,
                        db_index=True,
                        related_name="relationships",
                        to="dominion.Organization",
                    ),
                ),
                (
                    "history",
                    models.TextField(
                        blank=True, verbose_name="History of these organizations"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=255,
                        verbose_name="Name of the relationship",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OrgUnitModifiers",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "unit_type",
                    models.PositiveSmallIntegerField(
                        blank=0,
                        choices=[
                            (0, "Infantry"),
                            (1, "Pike"),
                            (2, "Cavalry"),
                            (3, "Archers"),
                            (4, "Longship"),
                            (5, "Siege Weapon"),
                            (6, "Galley"),
                            (8, "Cog"),
                            (7, "Dromond"),
                            (9, "Caravel"),
                        ],
                        default=0,
                    ),
                ),
                ("mod", models.SmallIntegerField(blank=0, default=0)),
                ("name", models.CharField(blank=True, max_length=80, null=True)),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="unit_mods",
                        to="dominion.Organization",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Unit Modifiers",
            },
        ),
        migrations.AlterField(
            model_name="plot",
            name="headline",
            field=models.CharField(
                blank=True,
                max_length=255,
                null=True,
                verbose_name="News-style bulletin",
            ),
        ),
        migrations.AlterField(
            model_name="plot",
            name="public",
            field=models.BooleanField(blank=True, default=True),
        ),
        migrations.CreateModel(
            name="PlotAction",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "week",
                    models.PositiveSmallIntegerField(blank=0, db_index=True, default=0),
                ),
                (
                    "actions",
                    models.TextField(
                        blank=True,
                        help_text="The writeup the player submits of their actions, used for GMing.",
                    ),
                ),
                ("public", models.BooleanField(blank=True, default=False)),
                (
                    "gm_notes",
                    models.TextField(
                        blank=True, verbose_name="Any ooc notes for other GMs"
                    ),
                ),
                (
                    "story",
                    models.TextField(
                        blank=True,
                        verbose_name="Story written by the GM for the player",
                    ),
                ),
                ("outcome_value", models.SmallIntegerField(blank=0, default=0)),
                (
                    "plot",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="actions",
                        to="dominion.Plot",
                    ),
                ),
                (
                    "dompc",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="actions",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                (
                    "beat",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="actions",
                        to="dominion.PlotUpdate",
                    ),
                ),
                (
                    "economic",
                    models.PositiveSmallIntegerField(
                        blank=0,
                        default=0,
                        help_text="Additional economic resources added by the player",
                    ),
                ),
                (
                    "military",
                    models.PositiveSmallIntegerField(
                        blank=0,
                        default=0,
                        help_text="Additional military resources added by the player",
                    ),
                ),
                (
                    "secret_actions",
                    models.TextField(
                        blank=True, verbose_name="Secret actions the player is taking"
                    ),
                ),
                (
                    "silver",
                    models.PositiveSmallIntegerField(
                        blank=0,
                        default=0,
                        help_text="Additional silver added by the player",
                    ),
                ),
                (
                    "social",
                    models.PositiveSmallIntegerField(
                        blank=0,
                        default=0,
                        help_text="Additional social resources added by the player",
                    ),
                ),
                (
                    "action_points",
                    models.PositiveSmallIntegerField(
                        blank=0,
                        default=0,
                        help_text="How many action points spent by player/assistants.",
                    ),
                ),
                ("attending", models.BooleanField(default=True)),
                (
                    "category",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Unknown"),
                            (1, "Combat"),
                            (2, "Support"),
                            (3, "Sabotage"),
                            (4, "Diplomacy"),
                            (5, "Scouting"),
                            (6, "Research"),
                        ],
                        default=0,
                    ),
                ),
                ("date_submitted", models.DateTimeField(blank=True, null=True)),
                ("difficulty", models.SmallIntegerField(blank=0, default=0)),
                ("editable", models.BooleanField(default=True)),
                (
                    "gm",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="gmd_actions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("prefer_offscreen", models.BooleanField(blank=True, default=False)),
                (
                    "roll",
                    models.SmallIntegerField(
                        blank=True, default=-9999, help_text="Current dice roll"
                    ),
                ),
                (
                    "secret_story",
                    models.TextField(
                        blank=True,
                        verbose_name="Any secret story written for the player",
                    ),
                ),
                (
                    "skill_used",
                    models.CharField(
                        blank=True,
                        default="investigation",
                        help_text="The skill the player chose to use",
                        max_length=80,
                    ),
                ),
                (
                    "stat_used",
                    models.CharField(
                        blank=True,
                        default="perception",
                        help_text="The stat the player chose to use",
                        max_length=80,
                    ),
                ),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Draft"),
                            (1, "Needs Player Input"),
                            (2, "Needs GM Input"),
                            (3, "Cancelled"),
                            (4, "Pending Resolution"),
                            (5, "Resolved"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "topic",
                    models.CharField(
                        blank=True,
                        help_text="Keywords or tldr or title",
                        max_length=255,
                    ),
                ),
                ("traitor", models.BooleanField(default=False)),
                ("free_action", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="PlotActionAssistant",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "actions",
                    models.TextField(
                        blank=True,
                        help_text="The writeup the player submits of their actions, used for GMing.",
                    ),
                ),
                (
                    "plot_action",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assisting_actions",
                        to="dominion.PlotAction",
                    ),
                ),
                (
                    "dompc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assisting_actions",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                (
                    "secret_actions",
                    models.TextField(
                        blank=True, verbose_name="Secret actions the player is taking"
                    ),
                ),
                (
                    "action_points",
                    models.PositiveSmallIntegerField(
                        blank=0,
                        default=0,
                        help_text="How many action points spent by player/assistants.",
                    ),
                ),
                ("attending", models.BooleanField(default=True)),
                ("date_submitted", models.DateTimeField(blank=True, null=True)),
                (
                    "economic",
                    models.PositiveSmallIntegerField(
                        blank=0,
                        default=0,
                        help_text="Additional economic resources added by the player",
                    ),
                ),
                ("editable", models.BooleanField(default=True)),
                (
                    "military",
                    models.PositiveSmallIntegerField(
                        blank=0,
                        default=0,
                        help_text="Additional military resources added by the player",
                    ),
                ),
                (
                    "roll",
                    models.SmallIntegerField(
                        blank=True, default=-9999, help_text="Current dice roll"
                    ),
                ),
                (
                    "silver",
                    models.PositiveSmallIntegerField(
                        blank=0,
                        default=0,
                        help_text="Additional silver added by the player",
                    ),
                ),
                (
                    "skill_used",
                    models.CharField(
                        blank=True,
                        default="investigation",
                        help_text="The skill the player chose to use",
                        max_length=80,
                    ),
                ),
                (
                    "social",
                    models.PositiveSmallIntegerField(
                        blank=0,
                        default=0,
                        help_text="Additional social resources added by the player",
                    ),
                ),
                (
                    "stat_used",
                    models.CharField(
                        blank=True,
                        default="perception",
                        help_text="The stat the player chose to use",
                        max_length=80,
                    ),
                ),
                (
                    "topic",
                    models.CharField(
                        blank=True,
                        help_text="Keywords or tldr or title",
                        max_length=255,
                    ),
                ),
                ("traitor", models.BooleanField(default=False)),
                ("free_action", models.BooleanField(default=False)),
            ],
            options={
                "unique_together": {("plot_action", "dompc")},
            },
        ),
        migrations.CreateModel(
            name="PraiseOrCondemn",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField(blank=True)),
                ("week", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("db_date_created", models.DateTimeField(auto_now_add=True)),
                ("value", models.IntegerField(default=0)),
                (
                    "number_used",
                    models.PositiveSmallIntegerField(
                        default=1,
                        help_text="Number of praises/condemns used from weekly pool",
                    ),
                ),
                (
                    "praiser",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="praises_given",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                (
                    "target",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="praises_received",
                        to="dominion.AssetOwner",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PrestigeAdjustment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "adjustment_type",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Fame"), (1, "Legend")], default=0
                    ),
                ),
                ("adjusted_on", models.DateTimeField(auto_now_add=True)),
                ("adjusted_by", models.IntegerField(default=0)),
                ("reason", models.TextField(blank=True, null=True)),
                (
                    "asset_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prestige_adjustments",
                        to="dominion.AssetOwner",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="dominion.PrestigeCategory",
                    ),
                ),
                ("long_reason", models.TextField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PrestigeNomination",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pending", models.BooleanField(default=True)),
                (
                    "adjust_type",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Fame"), (1, "Legend")], default=0
                    ),
                ),
                (
                    "adjust_size",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Small"),
                            (1, "Medium"),
                            (2, "Large"),
                            (3, "Huge"),
                        ],
                        default=0,
                    ),
                ),
                ("reason", models.CharField(blank=True, max_length=40, null=True)),
                ("long_reason", models.TextField()),
                (
                    "approved_by",
                    models.ManyToManyField(
                        related_name="_prestigenomination_approved_by_+",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="dominion.PrestigeCategory",
                    ),
                ),
                (
                    "nominator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                (
                    "nominees",
                    models.ManyToManyField(
                        related_name="_prestigenomination_nominees_+",
                        to="dominion.AssetOwner",
                    ),
                ),
                ("approved", models.BooleanField(default=False)),
                (
                    "denied_by",
                    models.ManyToManyField(
                        related_name="_prestigenomination_denied_by_+",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Reputation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("affection", models.IntegerField(blank=0, default=0)),
                ("respect", models.IntegerField(blank=0, default=0)),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reputations",
                        to="dominion.Organization",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reputations",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                ("date_gossip_set", models.DateTimeField(null=True)),
                (
                    "favor",
                    models.IntegerField(
                        default=0,
                        help_text="A percentage of the org's prestige applied to player's propriety.",
                    ),
                ),
                ("npc_gossip", models.TextField(blank=True)),
            ],
            options={
                "unique_together": {("player", "organization")},
            },
        ),
        migrations.AlterField(
            model_name="rpevent",
            name="celebration_tier",
            field=models.PositiveSmallIntegerField(
                blank=True,
                choices=[
                    (0, "Small"),
                    (1, "Average"),
                    (2, "Refined"),
                    (3, "Grand"),
                    (4, "Extravagant"),
                    (5, "Legendary"),
                ],
                default=0,
            ),
        ),
        migrations.AlterField(
            model_name="rpevent",
            name="plotroom",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="events_held_here",
                to="dominion.PlotRoom",
            ),
        ),
        migrations.AlterField(
            model_name="rpevent",
            name="risk",
            field=models.PositiveSmallIntegerField(
                blank=True,
                choices=[
                    (0, "No Risk"),
                    (1, "Minimal Risk"),
                    (2, "Low Risk"),
                    (3, "Reduced Risk"),
                    (4, "Normal Risk"),
                    (5, "Slightly Elevated Risk"),
                    (6, "Moderately Elevated Risk"),
                    (7, "Highly Elevated Risk"),
                    (8, "Very High Risk"),
                    (9, "Extreme Risk"),
                    (10, "Suicidal Risk"),
                ],
                default=4,
            ),
        ),
        migrations.CreateModel(
            name="ActionOOCQuestion",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(blank=True)),
                (
                    "action",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions",
                        to="dominion.PlotAction",
                    ),
                ),
                (
                    "action_assist",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions",
                        to="dominion.PlotActionAssistant",
                    ),
                ),
                ("is_intent", models.BooleanField(default=False)),
                ("mark_answered", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="ActionOOCAnswer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(blank=True)),
                (
                    "gm",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answers_given",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answers",
                        to="dominion.ActionOOCQuestion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Orders",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Troop Training"),
                            (2, "Explore territory"),
                            (3, "Raid Domain"),
                            (4, "Conquer Domain"),
                            (5, "Enforce Order"),
                            (6, "Besiege Castle"),
                            (7, "March"),
                            (8, "Defend"),
                            (9, "Patrol"),
                            (10, "Assist"),
                            (11, "Bolster Morale"),
                            (12, "Upgrade Equipment"),
                            (13, "Crisis Response"),
                        ],
                        default=1,
                    ),
                ),
                ("coin_cost", models.PositiveIntegerField(blank=0, default=0)),
                ("food_cost", models.PositiveIntegerField(blank=0, default=0)),
                ("week", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("complete", models.BooleanField(default=False)),
                (
                    "army",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="dominion.Army",
                    ),
                ),
                (
                    "target_domain",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="dominion.Domain",
                    ),
                ),
                (
                    "target_land",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="dominion.Land",
                    ),
                ),
                (
                    "action",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="dominion.PlotAction",
                    ),
                ),
                (
                    "assisting",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assisting_orders",
                        to="dominion.Orders",
                    ),
                ),
                (
                    "target_character",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="orders",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                (
                    "action_assist",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="dominion.PlotActionAssistant",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Army Orders",
            },
        ),
        migrations.CreateModel(
            name="MilitaryUnit",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "unit_type",
                    models.PositiveSmallIntegerField(
                        blank=0,
                        choices=[
                            (0, "Infantry"),
                            (1, "Pike"),
                            (2, "Cavalry"),
                            (3, "Archers"),
                            (4, "Longship"),
                            (5, "Siege Weapon"),
                            (6, "Galley"),
                            (8, "Cog"),
                            (7, "Dromond"),
                            (9, "Caravel"),
                        ],
                        default=0,
                    ),
                ),
                ("quantity", models.PositiveSmallIntegerField(blank=1, default=1)),
                ("level", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("equipment", models.PositiveSmallIntegerField(blank=0, default=0)),
                ("xp", models.SmallIntegerField(blank=0, default=0)),
                (
                    "army",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="units",
                        to="dominion.Army",
                    ),
                ),
                (
                    "commander",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="units",
                        to="dominion.PlayerOrNpc",
                    ),
                ),
                (
                    "hostile_area",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="units",
                        to="dominion.HostileArea",
                    ),
                ),
                (
                    "orders",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="units",
                        to="dominion.Orders",
                    ),
                ),
                (
                    "origin",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="units",
                        to="dominion.Organization",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DomainProject",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Build Housing"),
                            (2, "Build Farms"),
                            (3, "Build Mines"),
                            (4, "Build Mills"),
                            (5, "Build Defenses"),
                            (6, "Build Siege Weapons"),
                            (7, "Muster Troops"),
                            (9, "Build Troop Equipment"),
                        ],
                        default=1,
                    ),
                ),
                ("amount", models.PositiveSmallIntegerField(blank=1, default=1)),
                ("unit_type", models.PositiveSmallIntegerField(blank=1, default=1)),
                ("time_remaining", models.PositiveIntegerField(blank=1, default=1)),
                (
                    "castle",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects",
                        to="dominion.Castle",
                    ),
                ),
                (
                    "domain",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects",
                        to="dominion.Domain",
                    ),
                ),
                (
                    "military",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects",
                        to="dominion.Army",
                    ),
                ),
                (
                    "unit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects",
                        to="dominion.MilitaryUnit",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="plotaction",
            name="assistants",
            field=models.ManyToManyField(
                blank=True,
                related_name="assisted_actions",
                through="dominion.PlotActionAssistant",
                to="dominion.PlayerOrNpc",
            ),
        ),
    ]
