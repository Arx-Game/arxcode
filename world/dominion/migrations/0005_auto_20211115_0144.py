# Generated by Django 2.2.24 on 2021-11-15 01:44

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("stat_checks", "0006_statcheck_category"),
        ("dominion", "0004_auto_20211030_1419"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="plotaction",
            name="difficulty",
        ),
        migrations.RemoveField(
            model_name="plotaction",
            name="outcome_value",
        ),
        migrations.AddField(
            model_name="plotaction",
            name="additional_modifiers",
            field=models.IntegerField(
                default=0,
                help_text="Any additional modifiers to their roll total based on GM discretion.",
            ),
        ),
        migrations.AddField(
            model_name="plotaction",
            name="ap_divisor",
            field=models.PositiveIntegerField(
                default=100,
                help_text="Action Points required per point. 0 means it's disabled",
                validators=[django.core.validators.MinValueValidator(1)],
            ),
        ),
        migrations.AddField(
            model_name="plotaction",
            name="assist_divisor",
            field=models.PositiveSmallIntegerField(
                default=3,
                help_text="Divisor applied to assists",
                validators=[django.core.validators.MinValueValidator(1)],
            ),
        ),
        migrations.AddField(
            model_name="plotaction",
            name="economic_divisor",
            field=models.PositiveIntegerField(
                default=1000,
                help_text="Economic resources required per point.",
                validators=[django.core.validators.MinValueValidator(1)],
            ),
        ),
        migrations.AddField(
            model_name="plotaction",
            name="max_points_ap",
            field=models.PositiveSmallIntegerField(
                default=0, help_text="Maximum modifier to roll total from action points"
            ),
        ),
        migrations.AddField(
            model_name="plotaction",
            name="max_points_assists",
            field=models.PositiveSmallIntegerField(
                default=300, help_text="Maximum modifier to roll total from assists"
            ),
        ),
        migrations.AddField(
            model_name="plotaction",
            name="max_points_economic",
            field=models.PositiveSmallIntegerField(
                default=0,
                help_text="Maximum points they can add to roll total from economic resources",
            ),
        ),
        migrations.AddField(
            model_name="plotaction",
            name="max_points_military",
            field=models.PositiveSmallIntegerField(
                default=0,
                help_text="Maximum points they can add to roll total from military resources",
            ),
        ),
        migrations.AddField(
            model_name="plotaction",
            name="max_points_silver",
            field=models.PositiveSmallIntegerField(
                default=0,
                help_text="Maximum points they can add to roll total from silver",
            ),
        ),
        migrations.AddField(
            model_name="plotaction",
            name="max_points_social",
            field=models.PositiveSmallIntegerField(
                default=0,
                help_text="Maximum points they can add to roll total from social resources",
            ),
        ),
        migrations.AddField(
            model_name="plotaction",
            name="military_divisor",
            field=models.PositiveIntegerField(
                default=1000,
                help_text="Military resources required per point.",
                validators=[django.core.validators.MinValueValidator(1)],
            ),
        ),
        migrations.AddField(
            model_name="plotaction",
            name="roll_result",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="stat_checks.RollResult",
            ),
        ),
        migrations.AddField(
            model_name="plotaction",
            name="silver_divisor",
            field=models.PositiveIntegerField(
                default=100000,
                help_text="Silver required per point.",
                validators=[django.core.validators.MinValueValidator(1)],
            ),
        ),
        migrations.AddField(
            model_name="plotaction",
            name="social_divisor",
            field=models.PositiveIntegerField(
                default=1000,
                help_text="Social resources required per point.",
                validators=[django.core.validators.MinValueValidator(1)],
            ),
        ),
        migrations.AddField(
            model_name="plotaction",
            name="target_rank",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="stat_checks.CheckRank",
            ),
        ),
    ]
