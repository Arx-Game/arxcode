# Generated by Django 2.2.16 on 2020-11-22 01:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [
        # ("exploration", "0001_initial"),
        # ("exploration", "0002_auto_20181105_1538"),
        # ("exploration", "0003_auto_20181105_1756"),
        # ("exploration", "0004_auto_20181105_1816"),
        # ("exploration", "0005_auto_20181105_1829"),
        # ("exploration", "0006_auto_20181105_1851"),
        # ("exploration", "0007_auto_20181105_1858"),
        # ("exploration", "0008_auto_20181105_1902"),
        # ("exploration", "0009_auto_20181105_1906"),
        # ("exploration", "0010_shardhavenlayoutsquare_room"),
        # ("exploration", "0011_shardhavenmoodfragment"),
        # ("exploration", "0012_auto_20181111_2015"),
        # ("exploration", "0013_auto_20181111_2025"),
        # ("exploration", "0014_shardhavenobstacle_haven_types"),
        # ("exploration", "0015_auto_20181112_2259"),
        # ("exploration", "0016_auto_20181113_2246"),
        # ("exploration", "0017_auto_20181113_2303"),
        # ("exploration", "0018_auto_20181114_2025"),
        # ("exploration", "0019_generatedlootfragment"),
        # ("exploration", "0020_auto_20181114_2113"),
        # ("exploration", "0021_auto_20181114_2222"),
        # ("exploration", "0022_auto_20181114_2224"),
        # ("exploration", "0023_auto_20181114_2225"),
        # ("exploration", "0024_auto_20181115_0159"),
        # ("exploration", "0025_auto_20181115_2011"),
        # ("exploration", "0026_auto_20181115_2024"),
        # ("exploration", "0027_shardhavenobstacleroll_damage_splash"),
        # ("exploration", "0028_auto_20181115_2119"),
        # ("exploration", "0029_shardhavenobstacle_clue_success"),
        # ("exploration", "0030_shardhavenobstacleroll_pass_instantly"),
        # ("exploration", "0031_auto_20181116_2351"),
        # ("exploration", "0032_shardhavenlayoutexit_override"),
        # ("exploration", "0033_auto_20181117_1740"),
        # ("exploration", "0034_monster_weight_spawn"),
        # ("exploration", "0035_auto_20181118_0103"),
        # ("exploration", "0036_shardhaven_weight_no_monster_backtrack"),
        # ("exploration", "0037_shardhaven_weight_no_treasure_backtrack"),
        # ("exploration", "0038_shardhaven_auto_combat"),
        # ("exploration", "0039_auto_20181118_2313"),
        # ("exploration", "0040_auto_20181120_2016"),
        # ("exploration", "0041_shardhavenobstacle_obstacle_class"),
        # ("exploration", "0042_auto_20181122_1357"),
        # ("exploration", "0043_auto_20181122_1409"),
        # ("exploration", "0044_auto_20181122_2135"),
        # ("exploration", "0045_auto_20181122_2201"),
        # ("exploration", "0046_shardhavenpuzzle_name"),
        # ("exploration", "0047_auto_20181122_2250"),
        # ("exploration", "0048_shardhavenpuzzle_haven_types"),
        # ("exploration", "0049_auto_20181123_0105"),
        # ("exploration", "0050_auto_20181123_1233"),
        # ("exploration", "0051_auto_20181123_1244"),
        # ("exploration", "0052_auto_20181123_1307"),
        # ("exploration", "0053_auto_20181202_2019"),
        # ("exploration", "0054_auto_20191228_1417"),
    ]

    initial = True

    dependencies = [
        ("objects", "0009_remove_objectdb_db_player"),
    ]

    operations = [
        migrations.CreateModel(
            name="Shardhaven",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=78)),
                ("description", models.TextField(max_length=4096)),
                ("required_clue_value", models.IntegerField(default=0)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ShardhavenClue",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("required", models.BooleanField(default=False)),
                (
                    "shardhaven",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_clues",
                        to="exploration.Shardhaven",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ShardhavenDiscovery",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("discovered_on", models.DateTimeField(blank=True, null=True)),
                (
                    "discovery_method",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Unknown"),
                            (1, "Exploration"),
                            (2, "Clues"),
                            (3, "Staff Ex Machina"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "shardhaven",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="exploration.Shardhaven",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Shardhaven Discoveries",
            },
        ),
        migrations.CreateModel(
            name="ShardhavenType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=32)),
                ("description", models.TextField(max_length=2048)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ShardhavenLayout",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("width", models.PositiveSmallIntegerField(default=5)),
                ("height", models.PositiveSmallIntegerField(default=4)),
                ("entrance_x", models.PositiveSmallIntegerField(default=0)),
                ("entrance_y", models.PositiveSmallIntegerField(default=0)),
                (
                    "haven_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="exploration.ShardhavenType",
                    ),
                ),
                (
                    "haven",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="layouts",
                        to="exploration.Shardhaven",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="shardhaven",
            name="haven_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="havens",
                to="exploration.ShardhavenType",
            ),
        ),
        migrations.CreateModel(
            name="ShardhavenLayoutSquare",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("x_coord", models.PositiveSmallIntegerField()),
                ("y_coord", models.PositiveSmallIntegerField()),
                (
                    "layout",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rooms",
                        to="exploration.ShardhavenLayout",
                    ),
                ),
                (
                    "room",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shardhaven_room",
                        to="objects.ObjectDB",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="A description to use for this square instead of the generated one.",
                        null=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="A name to use for this square instead of the tile name.",
                        max_length=30,
                        null=True,
                    ),
                ),
                ("last_visited", models.DateTimeField(blank=True, null=True)),
                (
                    "visitors",
                    models.ManyToManyField(
                        related_name="_shardhavenlayoutsquare_visitors_+",
                        to="objects.ObjectDB",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ShardhavenObstacle",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "obstacle_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Pass a Dice Check"),
                            (1, "Possess Any Associated Clue"),
                            (2, "Possess All Associated Clues"),
                        ]
                    ),
                ),
                ("description", models.TextField()),
                (
                    "pass_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Everyone must pass once"),
                            (1, "Everyone must pass every time"),
                            (2, "If anyone passes, that's enough"),
                        ],
                        default=0,
                        verbose_name="Requirements",
                    ),
                ),
                (
                    "haven_types",
                    models.ManyToManyField(
                        blank=True,
                        related_name="_shardhavenobstacle_haven_types_+",
                        to="exploration.ShardhavenType",
                    ),
                ),
                ("clue_success", models.TextField(blank=True, null=True)),
                (
                    "obstacle_class",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Pass an Exit"), (1, "Obtain a Treasure")],
                        default=0,
                    ),
                ),
                (
                    "short_desc",
                    models.CharField(
                        blank=True,
                        help_text="A short description of this obstacle, like 'labyrinth of mirrors'.",
                        max_length=40,
                        null=True,
                    ),
                ),
                (
                    "peekable_closed",
                    models.BooleanField(
                        default=False,
                        help_text="Can people see through this exit before it's been passed?",
                    ),
                ),
                (
                    "peekable_open",
                    models.BooleanField(
                        default=True,
                        help_text="Can people see through this exit when it's been passed?",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ShardhavenObstacleClue",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "obstacle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="clues",
                        to="exploration.ShardhavenObstacle",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Monster",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=40)),
                ("plural_name", models.CharField(blank=True, max_length=40, null=True)),
                ("description", models.TextField()),
                ("spawn_message", models.TextField(blank=True, null=True)),
                ("difficulty", models.PositiveSmallIntegerField(default=5)),
                (
                    "npc_type",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Mooks"), (1, "Boss")], default=0
                    ),
                ),
                (
                    "npc_template",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Guard"),
                            (1, "Thug"),
                            (2, "Spy"),
                            (4, "Champion"),
                            (3, "Assistant"),
                            (5, "Animal"),
                            (6, "Small Animal"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "minimum_quantity",
                    models.PositiveSmallIntegerField(
                        default=1,
                        help_text="Minimum number of Mooks to spawn (mooks only)",
                    ),
                ),
                (
                    "maximum_quantity",
                    models.PositiveSmallIntegerField(
                        default=10,
                        help_text="Maximum number of Mooks to spawn (mooks only)",
                    ),
                ),
                (
                    "boss_rating",
                    models.PositiveSmallIntegerField(
                        default=1, help_text="Boss rating (boss only)"
                    ),
                ),
                (
                    "threat_rating",
                    models.PositiveSmallIntegerField(
                        default=1, help_text="The threat rating for this monster"
                    ),
                ),
                (
                    "mirror",
                    models.BooleanField(
                        default=False,
                        help_text="Should this monster mirror the stats of a player in the party?",
                    ),
                ),
                (
                    "weight_no_drop",
                    models.PositiveSmallIntegerField(
                        default=10,
                        help_text="The weight value to use for No Drop in drop calculations.",
                    ),
                ),
                (
                    "habitats",
                    models.ManyToManyField(
                        related_name="denizens", to="exploration.ShardhavenType"
                    ),
                ),
                (
                    "instances",
                    models.ManyToManyField(
                        related_name="monsters", to="objects.ObjectDB"
                    ),
                ),
                (
                    "weight_trinket",
                    models.PositiveSmallIntegerField(
                        default=0, help_text="The weight value to use for Trinkets"
                    ),
                ),
                (
                    "weight_weapon",
                    models.PositiveSmallIntegerField(
                        default=0, help_text="The weight value to use for Weapons"
                    ),
                ),
                ("weight_spawn", models.PositiveSmallIntegerField(default=10)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="shardhaven",
            name="difficulty_rating",
            field=models.PositiveSmallIntegerField(default=4),
        ),
        migrations.AddField(
            model_name="shardhaven",
            name="taint_level",
            field=models.PositiveSmallIntegerField(
                default=1,
                help_text="How much abyssal taint does this shardhaven have, on a scale of 1 to 10.",
            ),
        ),
        migrations.CreateModel(
            name="ShardhavenMoodFragment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                (
                    "shardhaven_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="exploration.ShardhavenType",
                    ),
                ),
                (
                    "taint_level",
                    models.PositiveSmallIntegerField(
                        default=1,
                        help_text="This mood fragment will only appear in shardhavens with this much or more abyssal taint.",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AlterField(
            model_name="shardhavenlayout",
            name="haven",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="layouts",
                to="exploration.Shardhaven",
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenlayout",
            name="haven",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="layout",
                to="exploration.Shardhaven",
            ),
        ),
        migrations.AddField(
            model_name="shardhaven",
            name="weight_boss_monster",
            field=models.PositiveSmallIntegerField(
                default=5, verbose_name="Boss Spawn Weight"
            ),
        ),
        migrations.AddField(
            model_name="shardhaven",
            name="weight_mook_monster",
            field=models.PositiveSmallIntegerField(
                default=5, verbose_name="Mook Spawn Weight"
            ),
        ),
        migrations.AddField(
            model_name="shardhaven",
            name="weight_no_monster",
            field=models.PositiveSmallIntegerField(
                default=40, verbose_name="No Spawn Weight"
            ),
        ),
        migrations.AddField(
            model_name="shardhaven",
            name="weight_no_treasure",
            field=models.PositiveSmallIntegerField(
                default=50, verbose_name="No Treasure Weight"
            ),
        ),
        migrations.AddField(
            model_name="shardhaven",
            name="weight_trinket",
            field=models.PositiveSmallIntegerField(
                default=5, verbose_name="Trinket Weight"
            ),
        ),
        migrations.AddField(
            model_name="shardhaven",
            name="weight_weapon",
            field=models.PositiveSmallIntegerField(
                default=1, verbose_name="Weapon Weight"
            ),
        ),
        migrations.AddField(
            model_name="shardhaven",
            name="weight_no_monster_backtrack",
            field=models.PositiveSmallIntegerField(
                default=100, verbose_name="No Spawn Weight on Backtrack"
            ),
        ),
        migrations.AddField(
            model_name="shardhaven",
            name="weight_no_treasure_backtrack",
            field=models.PositiveSmallIntegerField(
                default=50, verbose_name="No Treasure Weight on Backtrack"
            ),
        ),
        migrations.AddField(
            model_name="shardhaven",
            name="auto_combat",
            field=models.BooleanField(
                default=False, verbose_name="Manage Combat Automatically"
            ),
        ),
        migrations.CreateModel(
            name="ShardhavenLayoutExit",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "layout",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exits",
                        to="exploration.ShardhavenLayout",
                    ),
                ),
                (
                    "room_east",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exit_west",
                        to="exploration.ShardhavenLayoutSquare",
                    ),
                ),
                (
                    "room_north",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exit_south",
                        to="exploration.ShardhavenLayoutSquare",
                    ),
                ),
                (
                    "room_south",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exit_north",
                        to="exploration.ShardhavenLayoutSquare",
                    ),
                ),
                (
                    "room_west",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exit_east",
                        to="exploration.ShardhavenLayoutSquare",
                    ),
                ),
                (
                    "passed_by",
                    models.ManyToManyField(blank=True, to="objects.ObjectDB"),
                ),
                (
                    "obstacle",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="exploration.ShardhavenObstacle",
                    ),
                ),
                ("override", models.BooleanField(default=False)),
                ("modified_diff_at", models.DateTimeField(blank=True, null=True)),
                ("modified_diff_by", models.SmallIntegerField(blank=True, null=True)),
                (
                    "modified_diff_reason",
                    models.CharField(blank=True, max_length=80, null=True),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ShardhavenPuzzle",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weight_trinket",
                    models.SmallIntegerField(
                        default=0,
                        help_text="A weight chance that this puzzle will drop a trinket.",
                    ),
                ),
                (
                    "weight_weapon",
                    models.SmallIntegerField(
                        default=0,
                        help_text="A weight chance that this puzzle will drop a weapon.",
                    ),
                ),
                (
                    "obstacle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="puzzles",
                        to="exploration.ShardhavenObstacle",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "haven_types",
                    models.ManyToManyField(
                        related_name="puzzles", to="exploration.ShardhavenType"
                    ),
                ),
                (
                    "num_drops",
                    models.PositiveSmallIntegerField(
                        default=1,
                        help_text="How many treasures should this puzzle drop?",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MonsterAlchemicalDrop",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("weight", models.PositiveSmallIntegerField(default=10)),
                (
                    "monster",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="drops",
                        to="exploration.Monster",
                    ),
                ),
                ("max_quantity", models.PositiveSmallIntegerField(default=1)),
                ("min_quantity", models.PositiveSmallIntegerField(default=1)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MonsterCraftingDrop",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("weight", models.PositiveSmallIntegerField(default=10)),
                ("min_quantity", models.PositiveSmallIntegerField(default=1)),
                ("max_quantity", models.PositiveSmallIntegerField(default=1)),
                (
                    "monster",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="crafting_drops",
                        to="exploration.Monster",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="shardhavenlayoutsquare",
            name="monster",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="exploration.Monster",
            ),
        ),
        migrations.AddField(
            model_name="shardhavenlayoutsquare",
            name="monster_defeated",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="shardhavenlayoutsquare",
            name="puzzle",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="exploration.ShardhavenPuzzle",
            ),
        ),
        migrations.AddField(
            model_name="shardhavenlayoutsquare",
            name="puzzle_solved",
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name="ShardhavenAlignmentChance",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("weight", models.PositiveSmallIntegerField(default=10)),
                (
                    "haven",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alignment_chances",
                        to="exploration.Shardhaven",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ShardhavenAffinityChance",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("weight", models.PositiveSmallIntegerField(default=10)),
                (
                    "haven",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="affinity_chances",
                        to="exploration.Shardhaven",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GeneratedLootFragment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fragment_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Adjective"),
                            (1, "Bauble Material"),
                            (2, "Type of Item"),
                            (3, "Name fragment (first)"),
                            (4, "Name fragment (second)"),
                            (5, "Name fragment (prefix)"),
                            (6, "Small Weapon Type"),
                            (7, "Medium Weapon Type"),
                            (8, "Huge Weapon Type"),
                            (9, "Archery Weapon Type"),
                            (10, "Weapon Decoration"),
                            (11, "Weapon Element"),
                        ],
                        default=0,
                    ),
                ),
                ("text", models.CharField(max_length=45)),
            ],
            options={
                "abstract": False,
                "unique_together": {("fragment_type", "text")},
            },
        ),
        migrations.CreateModel(
            name="ShardhavenObstacleRoll",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("stat", models.CharField(max_length=40)),
                ("skill", models.CharField(max_length=40)),
                ("difficulty", models.PositiveSmallIntegerField()),
                ("target", models.PositiveSmallIntegerField()),
                (
                    "description",
                    models.TextField(
                        verbose_name="Description Shown of this Challenge"
                    ),
                ),
                (
                    "success_msg",
                    models.TextField(verbose_name="Message to room on Success"),
                ),
                (
                    "personal_success_msg",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Message to character on Success",
                    ),
                ),
                (
                    "failure_msg",
                    models.TextField(verbose_name="Message to room on Failure"),
                ),
                (
                    "personal_failure_msg",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Message to character on Failure",
                    ),
                ),
                (
                    "damage_amt",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Amount to damage a character by on failure",
                    ),
                ),
                (
                    "damage_mit",
                    models.BooleanField(
                        default=True,
                        verbose_name="If damage is applied, should armor mitigate it?",
                    ),
                ),
                (
                    "damage_reason",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Short description of damage, for the damage system.",
                    ),
                ),
                (
                    "obstacle",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rolls",
                        to="exploration.ShardhavenObstacle",
                    ),
                ),
                (
                    "override",
                    models.BooleanField(
                        default=False,
                        help_text="Should succeeding on this roll make the obstacle open to everyone else?",
                        verbose_name="Override on Success",
                    ),
                ),
                (
                    "damage_splash",
                    models.BooleanField(
                        default=False,
                        verbose_name="Should damage hit others in the party too?",
                    ),
                ),
                (
                    "pass_instantly",
                    models.BooleanField(
                        default=False,
                        verbose_name="Should a player immediately pass through the exit on success?",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ShardhavenPuzzleCraftingMaterial",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weight",
                    models.SmallIntegerField(
                        default=10,
                        help_text="A weight chance that this puzzle will drop this material.",
                    ),
                ),
                ("minimum_quantity", models.PositiveSmallIntegerField(default=1)),
                ("maximum_quantity", models.PositiveSmallIntegerField(default=1)),
                (
                    "puzzle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="crafting_materials",
                        to="exploration.ShardhavenPuzzle",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ShardhavenPuzzleMaterial",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weight",
                    models.SmallIntegerField(
                        default=10,
                        help_text="A weight chance that this puzzle will drop this material.",
                    ),
                ),
                ("minimum_quantity", models.PositiveSmallIntegerField(default=1)),
                ("maximum_quantity", models.PositiveSmallIntegerField(default=1)),
                (
                    "puzzle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alchemical_materials",
                        to="exploration.ShardhavenPuzzle",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ShardhavenPuzzleObjectLoot",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weight",
                    models.SmallIntegerField(
                        default=10,
                        help_text="A weight chance that this puzzle will drop this object.",
                    ),
                ),
                (
                    "duplicate",
                    models.BooleanField(
                        default=False,
                        help_text="Do we create a duplicate copy of this object to drop?",
                    ),
                ),
                (
                    "object",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="objects.ObjectDB",
                    ),
                ),
                (
                    "puzzle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="object_drops",
                        to="exploration.ShardhavenPuzzle",
                    ),
                ),
                (
                    "guaranteed",
                    models.BooleanField(
                        default=False, help_text="Is this object a guaranteed drop?"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
