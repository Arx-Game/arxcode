# Generated by Django 2.2.9 on 2019-12-28 14:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("exploration", "0053_auto_20181202_2019"),
    ]

    operations = [
        migrations.AlterField(
            model_name="generatedlootfragment",
            name="fragment_type",
            field=models.PositiveSmallIntegerField(
                choices=[
                    (0, "Adjective"),
                    (1, "Bauble Material"),
                    (2, "Type of Item"),
                    (3, "Name fragment (first)"),
                    (4, "Name fragment (second)"),
                    (5, "Name fragment (prefix)"),
                    (6, "Small Weapon Type"),
                    (7, "Medium Weapon Type"),
                    (8, "Huge Weapon Type"),
                    (9, "Archery Weapon Type"),
                    (10, "Weapon Decoration"),
                    (11, "Weapon Element"),
                ],
                default=0,
            ),
        ),
        migrations.AlterField(
            model_name="monster",
            name="boss_rating",
            field=models.PositiveSmallIntegerField(
                default=1, help_text="Boss rating (boss only)"
            ),
        ),
        migrations.AlterField(
            model_name="monster",
            name="maximum_quantity",
            field=models.PositiveSmallIntegerField(
                default=10, help_text="Maximum number of Mooks to spawn (mooks only)"
            ),
        ),
        migrations.AlterField(
            model_name="monster",
            name="minimum_quantity",
            field=models.PositiveSmallIntegerField(
                default=1, help_text="Minimum number of Mooks to spawn (mooks only)"
            ),
        ),
        migrations.AlterField(
            model_name="monster",
            name="mirror",
            field=models.BooleanField(
                default=False,
                help_text="Should this monster mirror the stats of a player in the party?",
            ),
        ),
        migrations.AlterField(
            model_name="monster",
            name="npc_template",
            field=models.PositiveSmallIntegerField(
                choices=[
                    (0, "Guard"),
                    (1, "Thug"),
                    (2, "Spy"),
                    (4, "Champion"),
                    (3, "Assistant"),
                    (5, "Animal"),
                    (6, "Small Animal"),
                ],
                default=0,
            ),
        ),
        migrations.AlterField(
            model_name="monster",
            name="npc_type",
            field=models.PositiveSmallIntegerField(
                choices=[(0, "Mooks"), (1, "Boss")], default=0
            ),
        ),
        migrations.AlterField(
            model_name="monster",
            name="threat_rating",
            field=models.PositiveSmallIntegerField(
                default=1, help_text="The threat rating for this monster"
            ),
        ),
        migrations.AlterField(
            model_name="monster",
            name="weight_no_drop",
            field=models.PositiveSmallIntegerField(
                default=10,
                help_text="The weight value to use for No Drop in drop calculations.",
            ),
        ),
        migrations.AlterField(
            model_name="monster",
            name="weight_trinket",
            field=models.PositiveSmallIntegerField(
                default=0, help_text="The weight value to use for Trinkets"
            ),
        ),
        migrations.AlterField(
            model_name="monster",
            name="weight_weapon",
            field=models.PositiveSmallIntegerField(
                default=0, help_text="The weight value to use for Weapons"
            ),
        ),
        migrations.AlterField(
            model_name="shardhaven",
            name="auto_combat",
            field=models.BooleanField(
                default=False, verbose_name="Manage Combat Automatically"
            ),
        ),
        migrations.AlterField(
            model_name="shardhaven",
            name="location",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="shardhavens",
                to="dominion.MapLocation",
            ),
        ),
        migrations.AlterField(
            model_name="shardhaven",
            name="weight_boss_monster",
            field=models.PositiveSmallIntegerField(
                default=5, verbose_name="Boss Spawn Weight"
            ),
        ),
        migrations.AlterField(
            model_name="shardhaven",
            name="weight_mook_monster",
            field=models.PositiveSmallIntegerField(
                default=5, verbose_name="Mook Spawn Weight"
            ),
        ),
        migrations.AlterField(
            model_name="shardhaven",
            name="weight_no_monster",
            field=models.PositiveSmallIntegerField(
                default=40, verbose_name="No Spawn Weight"
            ),
        ),
        migrations.AlterField(
            model_name="shardhaven",
            name="weight_no_monster_backtrack",
            field=models.PositiveSmallIntegerField(
                default=100, verbose_name="No Spawn Weight on Backtrack"
            ),
        ),
        migrations.AlterField(
            model_name="shardhaven",
            name="weight_no_treasure",
            field=models.PositiveSmallIntegerField(
                default=50, verbose_name="No Treasure Weight"
            ),
        ),
        migrations.AlterField(
            model_name="shardhaven",
            name="weight_no_treasure_backtrack",
            field=models.PositiveSmallIntegerField(
                default=50, verbose_name="No Treasure Weight on Backtrack"
            ),
        ),
        migrations.AlterField(
            model_name="shardhaven",
            name="weight_trinket",
            field=models.PositiveSmallIntegerField(
                default=5, verbose_name="Trinket Weight"
            ),
        ),
        migrations.AlterField(
            model_name="shardhaven",
            name="weight_weapon",
            field=models.PositiveSmallIntegerField(
                default=1, verbose_name="Weapon Weight"
            ),
        ),
        migrations.AlterField(
            model_name="shardhavendiscovery",
            name="discovery_method",
            field=models.PositiveSmallIntegerField(
                choices=[
                    (0, "Unknown"),
                    (1, "Exploration"),
                    (2, "Clues"),
                    (3, "Staff Ex Machina"),
                ],
                default=0,
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenobstacle",
            name="obstacle_class",
            field=models.PositiveSmallIntegerField(
                choices=[(0, "Pass an Exit"), (1, "Obtain a Treasure")], default=0
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenobstacle",
            name="obstacle_type",
            field=models.PositiveSmallIntegerField(
                choices=[
                    (0, "Pass a Dice Check"),
                    (1, "Possess Any Associated Clue"),
                    (2, "Possess All Associated Clues"),
                ]
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenobstacle",
            name="pass_type",
            field=models.PositiveSmallIntegerField(
                choices=[
                    (0, "Everyone must pass once"),
                    (1, "Everyone must pass every time"),
                    (2, "If anyone passes, that's enough"),
                ],
                default=0,
                verbose_name="Requirements",
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenobstacle",
            name="peekable_closed",
            field=models.BooleanField(
                default=False,
                help_text="Can people see through this exit before it's been passed?",
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenobstacle",
            name="peekable_open",
            field=models.BooleanField(
                default=True,
                help_text="Can people see through this exit when it's been passed?",
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenobstacle",
            name="short_desc",
            field=models.CharField(
                blank=True,
                help_text="A short description of this obstacle, like 'labyrinth of mirrors'.",
                max_length=40,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenobstacleroll",
            name="damage_amt",
            field=models.PositiveSmallIntegerField(
                blank=True,
                null=True,
                verbose_name="Amount to damage a character by on failure",
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenobstacleroll",
            name="damage_mit",
            field=models.BooleanField(
                default=True,
                verbose_name="If damage is applied, should armor mitigate it?",
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenobstacleroll",
            name="damage_reason",
            field=models.CharField(
                blank=True,
                max_length=255,
                null=True,
                verbose_name="Short description of damage, for the damage system.",
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenobstacleroll",
            name="description",
            field=models.TextField(verbose_name="Description Shown of this Challenge"),
        ),
        migrations.AlterField(
            model_name="shardhavenobstacleroll",
            name="failure_msg",
            field=models.TextField(verbose_name="Message to room on Failure"),
        ),
        migrations.AlterField(
            model_name="shardhavenobstacleroll",
            name="override",
            field=models.BooleanField(
                default=False,
                help_text="Should succeeding on this roll make the obstacle open to everyone else?",
                verbose_name="Override on Success",
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenobstacleroll",
            name="pass_instantly",
            field=models.BooleanField(
                default=False,
                verbose_name="Should a player immediately pass through the exit on success?",
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenobstacleroll",
            name="personal_failure_msg",
            field=models.TextField(
                blank=True, null=True, verbose_name="Message to character on Failure"
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenobstacleroll",
            name="personal_success_msg",
            field=models.TextField(
                blank=True, null=True, verbose_name="Message to character on Success"
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenobstacleroll",
            name="success_msg",
            field=models.TextField(verbose_name="Message to room on Success"),
        ),
        migrations.AlterField(
            model_name="shardhavenpuzzle",
            name="num_drops",
            field=models.PositiveSmallIntegerField(
                default=1, help_text="How many treasures should this puzzle drop?"
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenpuzzle",
            name="weight_trinket",
            field=models.SmallIntegerField(
                default=0,
                help_text="A weight chance that this puzzle will drop a trinket.",
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenpuzzle",
            name="weight_weapon",
            field=models.SmallIntegerField(
                default=0,
                help_text="A weight chance that this puzzle will drop a weapon.",
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenpuzzlecraftingmaterial",
            name="weight",
            field=models.SmallIntegerField(
                default=10,
                help_text="A weight chance that this puzzle will drop this material.",
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenpuzzlematerial",
            name="weight",
            field=models.SmallIntegerField(
                default=10,
                help_text="A weight chance that this puzzle will drop this material.",
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenpuzzleobjectloot",
            name="duplicate",
            field=models.BooleanField(
                default=False,
                help_text="Do we create a duplicate copy of this object to drop?",
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenpuzzleobjectloot",
            name="guaranteed",
            field=models.BooleanField(
                default=False, help_text="Is this object a guaranteed drop?"
            ),
        ),
        migrations.AlterField(
            model_name="shardhavenpuzzleobjectloot",
            name="weight",
            field=models.SmallIntegerField(
                default=10,
                help_text="A weight chance that this puzzle will drop this object.",
            ),
        ),
    ]
