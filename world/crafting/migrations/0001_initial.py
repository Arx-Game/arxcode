# Generated by Django 2.2.16 on 2021-03-31 12:19

from django.db import migrations, models
import django.db.models.deletion
import server.utils.arx_utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("dominion", "0002_fix_dominion_dependencies"),
        ("objects", "0011_auto_20191025_0831"),
    ]

    operations = [
        migrations.CreateModel(
            name="ArmorOverride",
            fields=[
                (
                    "objectdb",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="armor_override",
                        serialize=False,
                        to="objects.ObjectDB",
                    ),
                ),
                (
                    "armor_penalty",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                (
                    "armor_resilience",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                ("slot_limit", models.PositiveSmallIntegerField(blank=True, null=True)),
                ("slot", models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CraftingMaterialType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=80)),
                ("desc", models.TextField(blank=True, null=True)),
                ("value", models.PositiveIntegerField(blank=0, default=0)),
                (
                    "category",
                    models.CharField(
                        blank=True, db_index=True, max_length=80, null=True
                    ),
                ),
                ("contraband", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CraftingRecipe",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("desc", models.TextField(blank=True)),
                ("difficulty", models.PositiveSmallIntegerField(default=0)),
                ("additional_cost", models.PositiveIntegerField(default=0)),
                ("ability", models.CharField(blank=True, db_index=True, max_length=80)),
                ("skill", models.CharField(blank=True, db_index=True, max_length=80)),
                ("type", models.CharField(blank=True, db_index=True, max_length=80)),
                ("level", models.PositiveSmallIntegerField(default=1)),
                ("allow_adorn", models.BooleanField(default=True)),
                (
                    "lock_storage",
                    models.TextField(
                        blank=True,
                        help_text="defined in setup_utils",
                        verbose_name="locks",
                    ),
                ),
                (
                    "volume",
                    models.IntegerField(
                        default=0,
                        help_text="The size of objects created by this recipe.",
                    ),
                ),
                (
                    "base_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Value the recipe uses in different calculations for typeclass properties.",
                        max_digits=6,
                    ),
                ),
                (
                    "scaling",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Adjusts calculated value based on item quality",
                        max_digits=6,
                    ),
                ),
                (
                    "displayable",
                    models.BooleanField(
                        default=True, help_text="Used for furniture types"
                    ),
                ),
                (
                    "display_by_line",
                    models.BooleanField(
                        default=True,
                        help_text="If true, display inventory by line for container recipe",
                    ),
                ),
                (
                    "slot",
                    models.CharField(
                        blank=True,
                        help_text="Location where clothing/armor is worn",
                        max_length=80,
                    ),
                ),
                (
                    "slot_limit",
                    models.PositiveSmallIntegerField(
                        default=1, help_text="Max number that can be worn"
                    ),
                ),
                (
                    "fashion_mult",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="If defined, multiplier for modeling",
                        max_digits=6,
                        null=True,
                    ),
                ),
                (
                    "armor_penalty",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Value for armor impairing movement",
                        max_digits=6,
                    ),
                ),
                (
                    "weapon_skill",
                    models.CharField(
                        blank=True,
                        help_text="Weapon skill used for weapons made by this recipe",
                        max_length=80,
                    ),
                ),
                (
                    "known_by",
                    models.ManyToManyField(
                        blank=True,
                        related_name="crafting_recipes",
                        to="dominion.AssetOwner",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(server.utils.arx_utils.CachedPropertiesMixin, models.Model),
        ),
        migrations.CreateModel(
            name="CraftingRecord",
            fields=[
                (
                    "objectdb",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="crafting_record",
                        serialize=False,
                        to="objects.ObjectDB",
                    ),
                ),
                ("quality_level", models.PositiveSmallIntegerField(default=0)),
                (
                    "crafted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_crafts_records",
                        to="objects.ObjectDB",
                    ),
                ),
                (
                    "recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="crafting_records",
                        to="crafting.CraftingRecipe",
                        null=True,
                        blank=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EquippedStatus",
            fields=[
                (
                    "objectdb",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="equipped_status",
                        serialize=False,
                        to="objects.ObjectDB",
                    ),
                ),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "unequipped"), (1, "worn"), (2, "wielded")],
                        default=0,
                    ),
                ),
                ("worn_time", models.FloatField(default=0.0)),
                ("ready_phrase", models.TextField(blank=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MaskedDescription",
            fields=[
                (
                    "objectdb",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="masked_description",
                        serialize=False,
                        to="objects.ObjectDB",
                    ),
                ),
                ("description", models.TextField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PlaceSpotsOverride",
            fields=[
                (
                    "objectdb",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="place_spots_override",
                        serialize=False,
                        to="objects.ObjectDB",
                    ),
                ),
                ("max_spots", models.PositiveSmallIntegerField(default=1)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WeaponOverride",
            fields=[
                (
                    "objectdb",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="weapon_override",
                        serialize=False,
                        to="objects.ObjectDB",
                    ),
                ),
                (
                    "attack_skill",
                    models.CharField(blank=True, max_length=80, null=True),
                ),
                ("attack_stat", models.CharField(blank=True, max_length=80, null=True)),
                ("damage_stat", models.CharField(blank=True, max_length=80, null=True)),
                (
                    "damage_bonus",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                ("attack_type", models.CharField(blank=True, max_length=80, null=True)),
                ("can_be_parried", models.BooleanField(blank=True, null=True)),
                ("can_be_blocked", models.BooleanField(blank=True, null=True)),
                ("can_be_dodged", models.BooleanField(blank=True, null=True)),
                ("can_be_countered", models.BooleanField(blank=True, null=True)),
                ("can_parry", models.BooleanField(blank=True, null=True)),
                ("can_riposte", models.BooleanField(blank=True, null=True)),
                ("difficulty_mod", models.SmallIntegerField(blank=True, null=True)),
                ("flat_damage_bonus", models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TranslatedDescription",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("language", models.CharField(max_length=80)),
                ("description", models.TextField()),
                (
                    "objectdb",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="objects.ObjectDB",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RequiredMaterial",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.PositiveIntegerField(default=0)),
                (
                    "recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="required_materials",
                        to="crafting.CraftingRecipe",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crafting.CraftingMaterialType",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Required Materials",
            },
        ),
        migrations.CreateModel(
            name="RefineAttempt",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("num_attempts", models.PositiveIntegerField(default=1)),
                (
                    "crafter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="refine_attempts",
                        to="objects.ObjectDB",
                    ),
                ),
                (
                    "record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="refine_attempts",
                        to="crafting.CraftingRecord",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PlaceOccupation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "character",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="place_occupation",
                        to="objects.ObjectDB",
                    ),
                ),
                (
                    "place",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="occupying_characters",
                        to="objects.ObjectDB",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OwnedMaterial",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.PositiveIntegerField(default=0)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owned_materials",
                        to="dominion.AssetOwner",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crafting.CraftingMaterialType",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Owned Materials",
            },
        ),
        migrations.CreateModel(
            name="MaterialComposition",
            fields=[
                (
                    "objectdb",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="material_composition",
                        serialize=False,
                        to="objects.ObjectDB",
                    ),
                ),
                (
                    "material_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crafting.CraftingMaterialType",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="craftingrecipe",
            name="materials",
            field=models.ManyToManyField(
                blank=True,
                through="crafting.RequiredMaterial",
                to="crafting.CraftingMaterialType",
            ),
        ),
        migrations.CreateModel(
            name="AdornedMaterial",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.PositiveIntegerField(default=0)),
                (
                    "objectdb",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="adorned_materials",
                        to="objects.ObjectDB",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crafting.CraftingMaterialType",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
